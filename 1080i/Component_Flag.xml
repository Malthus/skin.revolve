<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <variable name="ImageForOverlayFlag">
        <value condition="ListItem.IsPlaying">flags/overlay-playing.png</value>
        <value condition="ListItem.HasTimer">flags/overlay-timer.png</value>
        <value condition="ListItem.IsEncrypted | String.IsEqual(ListItem.Overlay,OverlayLocked.png)">flags/overlay-locked.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png)">flags/overlay-watched.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayRAR.png) | String.IsEqual(ListItem.Overlay,OverlayZIP.png)">flags/overlay-compressed.png</value>
    </variable>

    <include name="BackgroundForFlag">
        <param name="visible" default="true" />
        <param name="height" default="60" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />

        <definition>
            <control type="image">
                <visible>$PARAM[visible]</visible>
                <width>$PARAM[height]</width>
                <height>$PARAM[height]</height>
                <texture colordiffuse="$PARAM[backgroundcolor]">elements/circle-mask.png</texture>
                <aspectratio scalediffuse="false">keep</aspectratio>
            </control>

            <control type="image">
                <visible>$PARAM[visible]</visible>
                <width>$PARAM[height]</width>
                <height>$PARAM[height]</height>
                <texture colordiffuse="$PARAM[flagcolor]">flags/property-background.png</texture>
                <aspectratio scalediffuse="false">keep</aspectratio>
            </control>
        </definition>
    </include>

    <include name="LabelForFlag">
        <param name="visible" default="true" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="wrapmultiline" default="false" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="label" default="" />

        <definition>
            <control type="label">
                <visible>$PARAM[visible]</visible>
                <left>0</left>
                <top>$PARAM[labelposy]</top>
                <width>$PARAM[height]</width>
                <height>16</height>
                <font>FlagFont</font>
                <textcolor>$PARAM[backgroundcolor]</textcolor>
                <align>center</align>
                <aligny>top</aligny>
                <wrapmultiline>$PARAM[wrapmultiline]</wrapmultiline>
                <label>$PARAM[label]</label>
            </control>
        </definition>
    </include>

    <include name="SpacerFlag">
        <param name="visible" default="true" />
        <param name="width" default="20" />
        <param name="height" default="60" />

        <definition>
            <control type="group">
                <visible>$PARAM[visible]</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>
            </control>
        </definition>
    </include>

    <include name="BooleanFlag">
        <param name="visible" default="false" />
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="iconfilename" default="" />

        <definition>
            <control type="group">
                <visible>$PARAM[visible]</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">$PARAM[iconfilename]</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>
            </control>
        </definition>
    </include>

    <include name="ListItemOverlayFlag">
        <param name="left" default="0" />
        <param name="top" default="0" />
        <param name="width" default="200" />
        <param name="height" default="200" />

        <definition>
            <control type="image">
                <visible>Skin.HasSetting(Media.IconOverlays.Visible) + !ListItem.IsRecording</visible>
                <left>$PARAM[left]</left>
                <top>$PARAM[top]</top>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>
                <texture colordiffuse="$VAR[FademaskColor]">$VAR[ImageForOverlayFlag]</texture>
                <aspectratio scalediffuse="false">keep</aspectratio>
            </control>

            <control type="image">
                <visible>Skin.HasSetting(Media.IconOverlays.Visible) + ListItem.IsRecording</visible>
                <left>$PARAM[left]</left>
                <top>$PARAM[top]</top>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>
                <texture>elements/element-recorddot.png</texture>
                <aspectratio scalediffuse="false">keep</aspectratio>
            </control>
        </definition>
    </include>

    <include name="WatchedFlag">
        <param name="visible" default="String.IsEqual(ListItem.Overlay,OverlayWatched.png)" />
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />

        <definition>
            <include content="BooleanFlag">
                <param name="visible" value="Skin.HasSetting(Media.PersonalFlags.Visible) + $PARAM[visible]" />
                <param name="width" value="$PARAM[width]" />
                <param name="height" value="$PARAM[height]" />
                <param name="flagcolor" value="$PARAM[flagcolor]" />
                <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                <param name="iconfilename" value="flags/property-watched.png" />
            </include>
        </definition>
    </include>

    <include name="UserRatingFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="ListItem.UserRating" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.PersonalFlags.Visible) + Integer.IsGreater($PARAM[value],0)</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-userrating.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>
                
                <control type="label">
                    <left>0</left>
                    <top>0</top>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <font>UserFlagFont</font>
                    <textcolor>$PARAM[flagcolor]</textcolor>
                    <align>center</align>
                    <aligny>center</aligny>
                    <label>$INFO[$PARAM[value]]</label>
                </control>
            </control>
        </definition>
    </include>

    <include name="PlayCountFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="ListItem.PlayCount" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.PersonalFlags.Visible) + Integer.IsGreater($PARAM[value],0)</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-playcount.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <control type="label">
                    <left>0</left>
                    <top>0</top>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <font>UserFlagFont</font>
                    <textcolor>$PARAM[flagcolor]</textcolor>
                    <align>center</align>
                    <aligny>center</aligny>
                    <label>$INFO[$PARAM[value]]</label>
                </control>
            </control>
        </definition>
    </include>

    <include name="RecordingPropertyFlag">
        <param name="visible" default="ListItem.IsRecording" />
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />

        <definition>
            <include content="BooleanFlag">
                <param name="visible" value="Skin.HasSetting(Media.PersonalFlags.Visible) + $PARAM[visible]" />
                <param name="width" value="$PARAM[width]" />
                <param name="height" value="$PARAM[height]" />
                <param name="flagcolor" value="$PARAM[flagcolor]" />
                <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                <param name="iconfilename" value="elements/element-recorddot.png" />
            </include>
        </definition>
    </include>

    <include name="TimerPropertyFlag">
        <param name="visible" default="ListItem.HasTimer" />
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />

        <definition>
            <include content="BooleanFlag">
                <param name="visible" value="Skin.HasSetting(Media.PersonalFlags.Visible) + $PARAM[visible]" />
                <param name="width" value="$PARAM[width]" />
                <param name="height" value="$PARAM[height]" />
                <param name="flagcolor" value="$PARAM[flagcolor]" />
                <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                <param name="iconfilename" value="flags/property-timer.png" />
            </include>
        </definition>
    </include>

    <include name="YearFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="ListItem.Year" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.InformationFlags.Visible) + !String.IsEmpty($PARAM[value])</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-year.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <include content="LabelForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="$INFO[$PARAM[value]]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="DurationFlag">
        <param name="visible" default="true" />
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="ListItem.Duration" />
        <param name="markupvalue" default="(mm:ss)" />
        <param name="unitvalue" default="" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.InformationFlags.Visible) + $PARAM[visible] + !String.IsEmpty($PARAM[value])</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-duration.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <include content="LabelForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="$INFO[$PARAM[value]$PARAM[markupvalue]] $PARAM[unitvalue]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="RatingFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="ListItem.Rating" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.RatingFlags.Visible) + Integer.IsGreater($PARAM[value],0)</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-rating.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <include content="LabelForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="$INFO[$PARAM[value]]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="MpaaRatingFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="ListItem.Mpaa" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.RatingFlags.Visible) + !String.IsEmpty($PARAM[value])</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-warning.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <control type="image">
                    <visible>String.Contains($PARAM[value],rated r)</visible>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-mpaarating-restricted.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>
                <control type="image">
                    <visible>String.Contains($PARAM[value],rated nc)</visible>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-mpaarating-nc17.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>
                <control type="image">
                    <visible>String.Contains($PARAM[value],rated pg-13)</visible>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-mpaarating-pg13.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>
                <control type="image">
                    <visible>String.Contains($PARAM[value],rated pg) + !String.Contains($PARAM[value],rated pg-13)</visible>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-mpaarating-pg.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>
                <control type="image">
                    <visible>String.Contains($PARAM[value],rated g)</visible>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-mpaarating-general.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>
                <control type="image">
                    <visible>String.Contains($PARAM[value],not rated)</visible>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-mpaarating-notrated.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>
                <control type="image">
                    <visible>!String.Contains($PARAM[value],rated r) + !String.Contains($PARAM[value],rated nc) + !String.Contains($PARAM[value],rated pg) + !String.Contains($PARAM[value],rated g) + !String.Contains($PARAM[value],not rated)</visible>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-mpaarating-unknown.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>
            </control>
        </definition>
    </include>

    <include name="VideoStereoscopicFlag">
        <param name="visible" default="ListItem.IsStereoscopic" />
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />

        <definition>
            <include content="BooleanFlag">
                <param name="visible" value="Skin.HasSetting(Media.TechnicalFlags.Visible) + $PARAM[visible]" />
                <param name="width" value="$PARAM[width]" />
                <param name="height" value="$PARAM[height]" />
                <param name="flagcolor" value="$PARAM[flagcolor]" />
                <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                <param name="iconfilename" value="flags/property-3d.png" />
            </include>
        </definition>
    </include>

    <include name="VideoCodecFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="ListItem.VideoCodec" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.TechnicalFlags.Visible) + !String.IsEmpty($PARAM[value])</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <visible>!String.IsEqual($PARAM[value],divx) + !String.IsEqual($PARAM[value],xvid)</visible>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-videocodec.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <include content="LabelForFlag">
                    <param name="visible" value="!String.IsEqual($PARAM[value],divx) + !String.IsEqual($PARAM[value],xvid)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="$INFO[$PARAM[value]]" />
                </include>

                <control type="image">
                    <visible>String.IsEqual($PARAM[value],divx)</visible>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-videocodec-divx.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>
                <control type="image">
                    <visible>String.IsEqual($PARAM[value],xvid)</visible>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-videocodec-xvid.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>
            </control>
        </definition>
    </include>

    <include name="VideoResolutionFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="ListItem.VideoResolution" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.TechnicalFlags.Visible) + !String.IsEmpty($PARAM[value])</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-videoresolution.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <include content="LabelForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="$INFO[$PARAM[value]]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="VideoAspectRatioFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="ListItem.VideoAspect" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.TechnicalFlags.Visible) + !String.IsEmpty($PARAM[value])</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-videoaspectratio.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <include content="LabelForFlag">
                    <param name="visible" value="String.IsEqual($PARAM[value],1.33) | String.IsEqual($PARAM[value],1.37)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="4:3" />
                </include>
                <include content="LabelForFlag">
                    <param name="visible" value="String.IsEqual($PARAM[value],1.66) | String.IsEqual($PARAM[value],1.78)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="16:9" />
                </include>
                <include content="LabelForFlag">
                    <param name="visible" value="!String.IsEqual($PARAM[value],1.33) + !String.IsEqual($PARAM[value],1.37) + !String.IsEqual($PARAM[value],1.66) + !String.IsEqual($PARAM[value],1.78)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="$INFO[$PARAM[value]]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="AudioCodecFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="ListItem.AudioCodec" />
        <param name="fileextensionvalue" default="ListItem.FileExtension" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.TechnicalFlags.Visible) + [!String.IsEmpty($PARAM[value]) | String.IsEqual($PARAM[fileextensionvalue],flac) | String.IsEqual($PARAM[fileextensionvalue],mp3)]</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <visible>!String.IsEmpty($PARAM[value]) + !String.IsEqual($PARAM[value],aac) + !String.IsEqual($PARAM[value],dts) + !String.IsEqual($PARAM[value],flac) + !String.IsEqual($PARAM[value],mp3) + !String.IsEqual($PARAM[value],mp3float)</visible>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-audiocodec.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <include content="LabelForFlag">
                    <param name="visible" value="!String.IsEmpty($PARAM[value]) + !String.IsEqual($PARAM[value],aac) + !String.IsEqual($PARAM[value],dts) + !String.IsEqual($PARAM[value],flac) + !String.IsEqual($PARAM[value],mp3) + !String.IsEqual($PARAM[value],mp3float)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="$INFO[$PARAM[value]]" />
                </include>

                <control type="image">
                    <visible>String.IsEqual($PARAM[value],aac)</visible>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-audiocodec-aac.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>
                <control type="image">
                    <visible>String.IsEqual($PARAM[value],dts)</visible>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-audiocodec-dts.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>
                <control type="image">
                    <visible>String.IsEqual($PARAM[value],flac) | [String.IsEmpty($PARAM[value]) + String.IsEqual($PARAM[fileextensionvalue],flac)]</visible>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-audiocodec-flac.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>
                <control type="image">
                    <visible>String.IsEqual($PARAM[value],mp3) | String.IsEqual($PARAM[value],mp3float) | [String.IsEmpty($PARAM[value]) + String.IsEqual($PARAM[fileextensionvalue],mp3)]</visible>
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-audiocodec-mp3.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>
            </control>
        </definition>
    </include>

    <include name="AudioChannelsFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="ListItem.AudioChannels" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.TechnicalFlags.Visible) + Integer.IsGreater($PARAM[value],0)</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-audiochannels.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <include content="LabelForFlag">
                    <param name="visible" value="String.IsEqual($PARAM[value],1)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="1.0" />
                </include>
                <include content="LabelForFlag">
                    <param name="visible" value="String.IsEqual($PARAM[value],2)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="2.0" />
                </include>
                <include content="LabelForFlag">
                    <param name="visible" value="String.IsEqual($PARAM[value],3)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="2.1" />
                </include>
                <include content="LabelForFlag">
                    <param name="visible" value="String.IsEqual($PARAM[value],4)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="4.0" />
                </include>
                <include content="LabelForFlag">
                    <param name="visible" value="String.IsEqual($PARAM[value],5)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="4.1" />
                </include>
                <include content="LabelForFlag">
                    <param name="visible" value="String.IsEqual($PARAM[value],6)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="5.1" />
                </include>
                <include content="LabelForFlag">
                    <param name="visible" value="String.IsEqual($PARAM[value],7)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="6.1" />
                </include>
                <include content="LabelForFlag">
                    <param name="visible" value="String.IsEqual($PARAM[value],8)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="7.1" />
                </include>
                <include content="LabelForFlag">
                    <param name="visible" value="String.IsEqual($PARAM[value],10)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="9.1" />
                </include>
            </control>
        </definition>
    </include>

    <include name="AudioBitrateFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="MusicPlayer.BitRate" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.TechnicalFlags.Visible) + !String.IsEmpty($PARAM[value])</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-bitrate.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <include content="LabelForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="$INFO[$PARAM[value],, $LOCALIZE[31911]]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="AudioSamplerateFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="MusicPlayer.SampleRate" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.TechnicalFlags.Visible) + !String.IsEmpty($PARAM[value])</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-samplerate.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <include content="LabelForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="$INFO[$PARAM[value],, $LOCALIZE[31998]]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="PictureCodecFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="fileextensionvalue" default="ListItem.FileExtension" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.TechnicalFlags.Visible) + [String.Contains($PARAM[fileextensionvalue],jpg) | String.Contains($PARAM[fileextensionvalue],jpeg) | String.Contains($PARAM[fileextensionvalue],png) | String.Contains($PARAM[fileextensionvalue],gif)]</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-picturecodec.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <include content="LabelForFlag">
                    <param name="visible" value="String.IsEqual($PARAM[fileextensionvalue],jpg)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="JPEG" />
                </include>
                <include content="LabelForFlag">
                    <param name="visible" value="!String.IsEqual($PARAM[fileextensionvalue],jpg)" />
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="[UPPERCASE]$INFO[$PARAM[fileextensionvalue]][/UPPERCASE]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="PictureSizeFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="ListItem.PictureResolution" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.TechnicalFlags.Visible) + !String.IsEmpty($PARAM[value])</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-picturesize.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <include content="LabelForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="wrapmultiline" value="true" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="$INFO[$PARAM[value]]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="PictureISOFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="ListItem.PictureISO" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.TechnicalFlags.Visible) + !String.IsEmpty($PARAM[value])</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-pictureiso.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <include content="LabelForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="$INFO[$PARAM[value]]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="PictureApertureFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="ListItem.PictureAperture" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.TechnicalFlags.Visible) + !String.IsEmpty($PARAM[value])</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-aperture.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <include content="LabelForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="$INFO[$PARAM[value],$LOCALIZE[31916],]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="EpgPropertyFlag">
        <param name="visible" default="ListItem.HasEpg" />
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />

        <definition>
            <include content="BooleanFlag">
                <param name="visible" value="Skin.HasSetting(Media.TechnicalFlags.Visible) + $PARAM[visible]" />
                <param name="width" value="$PARAM[width]" />
                <param name="height" value="$PARAM[height]" />
                <param name="flagcolor" value="$PARAM[flagcolor]" />
                <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                <param name="iconfilename" value="flags/property-epg.png" />
            </include>
        </definition>
    </include>

    <include name="TeletextPropertyFlag">
        <param name="visible" default="VideoPlayer.HasTeletext" />
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />

        <definition>
            <include content="BooleanFlag">
                <param name="visible" value="Skin.HasSetting(Media.TechnicalFlags.Visible) + $PARAM[visible]" />
                <param name="width" value="$PARAM[width]" />
                <param name="height" value="$PARAM[height]" />
                <param name="flagcolor" value="$PARAM[flagcolor]" />
                <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                <param name="iconfilename" value="flags/property-text.png" />
            </include>
        </definition>
    </include>

    <include name="InternetStreamPropertyFlag">
        <param name="visible" default="Player.IsInternetStream" />
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />

        <definition>
            <include content="BooleanFlag">
                <param name="visible" value="Skin.HasSetting(Media.TechnicalFlags.Visible) + $PARAM[visible]" />
                <param name="width" value="$PARAM[width]" />
                <param name="height" value="$PARAM[height]" />
                <param name="flagcolor" value="$PARAM[flagcolor]" />
                <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                <param name="iconfilename" value="flags/property-internetstream.png" />
            </include>
        </definition>
    </include>
    
    <include name="AddonVersionFlag">
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="value" default="ListItem.AddonVersion" />

        <definition>
            <control type="group">
                <visible>Skin.HasSetting(Media.TechnicalFlags.Visible) + !String.IsEmpty($PARAM[value])</visible>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>

                <include content="BackgroundForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <control type="image">
                    <width>$PARAM[height]</width>
                    <height>$PARAM[height]</height>
                    <texture colordiffuse="$PARAM[backgroundcolor]">flags/property-addonversion.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                </control>

                <include content="LabelForFlag">
                    <param name="height" value="$PARAM[height]" />
                    <param name="labelposy" value="$PARAM[labelposy]" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="label" value="$INFO[$PARAM[value]]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="AddonEnabledPropertyFlag">
        <param name="visible" default="ListItem.Property(Addon.IsEnabled) + String.IsEmpty(ListItem.AddonBroken)" />
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />

        <definition>
            <include content="BooleanFlag">
                <param name="visible" value="Skin.HasSetting(Media.TechnicalFlags.Visible) + $PARAM[visible]" />
                <param name="width" value="$PARAM[width]" />
                <param name="height" value="$PARAM[height]" />
                <param name="flagcolor" value="$PARAM[flagcolor]" />
                <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                <param name="iconfilename" value="flags/property-addonenabled.png" />
            </include>
        </definition>
    </include>

    <include name="AddonDisabledPropertyFlag">
        <param name="visible" default="ListItem.Property(Addon.IsInstalled) + !ListItem.Property(Addon.IsEnabled)" />
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="labelposy" default="28" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />

        <definition>
            <include content="BooleanFlag">
                <param name="visible" value="Skin.HasSetting(Media.TechnicalFlags.Visible) + $PARAM[visible]" />
                <param name="width" value="$PARAM[width]" />
                <param name="height" value="$PARAM[height]" />
                <param name="flagcolor" value="$PARAM[flagcolor]" />
                <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                <param name="iconfilename" value="flags/property-addondisabled.png" />
            </include>
        </definition>
    </include>

    <include name="AddonUpdateAvailablePropertyFlag">
        <param name="visible" default="ListItem.Property(Addon.HasUpdate)" />
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />

        <definition>
            <include content="BooleanFlag">
                <param name="visible" value="Skin.HasSetting(Media.TechnicalFlags.Visible) + $PARAM[visible]" />
                <param name="width" value="$PARAM[width]" />
                <param name="height" value="$PARAM[height]" />
                <param name="flagcolor" value="$PARAM[flagcolor]" />
                <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                <param name="iconfilename" value="flags/property-updateavailable.png" />
            </include>
        </definition>
    </include>

    <include name="AddonBrokenPropertyFlag">
        <param name="visible" default="!String.IsEmpty(ListItem.AddonBroken)" />
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />

        <definition>
            <include content="BooleanFlag">
                <param name="visible" value="Skin.HasSetting(Media.TechnicalFlags.Visible) + $PARAM[visible]" />
                <param name="width" value="$PARAM[width]" />
                <param name="height" value="$PARAM[height]" />
                <param name="flagcolor" value="$PARAM[flagcolor]" />
                <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                <param name="iconfilename" value="flags/property-addonbroken.png" />
            </include>
        </definition>
    </include>

    <include name="CompressedPropertyFlag">
        <param name="visible" default="[String.IsEqual(ListItem.Overlay,OverlayRAR.png) | String.IsEqual(ListItem.Overlay,OverlayZIP.png)]" />
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />

        <definition>
            <include content="BooleanFlag">
                <param name="visible" value="Skin.HasSetting(Media.TechnicalFlags.Visible) + $PARAM[visible]" />
                <param name="width" value="$PARAM[width]" />
                <param name="height" value="$PARAM[height]" />
                <param name="flagcolor" value="$PARAM[flagcolor]" />
                <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                <param name="iconfilename" value="flags/property-compressed.png" />
            </include>
        </definition>
    </include>

    <include name="LockedPropertyFlag">
        <param name="visible" default="[ListItem.IsEncrypted | String.IsEqual(ListItem.Overlay,OverlayLocked.png)]" />
        <param name="width" default="62" />
        <param name="height" default="60" />
        <param name="flagcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />

        <definition>
            <include content="BooleanFlag">
                <param name="visible" value="Skin.HasSetting(Media.TechnicalFlags.Visible) + $PARAM[visible]" />
                <param name="width" value="$PARAM[width]" />
                <param name="height" value="$PARAM[height]" />
                <param name="flagcolor" value="$PARAM[flagcolor]" />
                <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                <param name="iconfilename" value="flags/property-locked.png" />
            </include>
        </definition>
    </include>

    <include name="DialogListForFlag">
        <param name="posx" default="0" />
        <param name="posy" default="0" />
        <param name="width" default="1240" />

        <definition>
            <control type="grouplist">
                <left>$PARAM[posx]</left>
                <top>$PARAM[posy]</top>
                <width>$PARAM[width]</width>
                <height>60</height>
                <itemgap>0</itemgap>
                <orientation>horizontal</orientation>

                <include content="WatchedFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="UserRatingFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="PlayCountFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="RecordingPropertyFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="TimerPropertyFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>

                <include content="SpacerFlag">
                    <param name="visible" value="Skin.HasSetting(Media.PersonalFlags.Visible) + [String.IsEqual(ListItem.Overlay,OverlayWatched.png) | Integer.IsGreater(ListItem.UserRating,0) | Integer.IsGreater(ListItem.PlayCount,0) | ListItem.IsRecording | ListItem.HasTimer]" />
                </include>

                <include content="YearFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="DurationFlag">
                    <param name="visible" value="String.IsEqual(ListItem.Duration(hh),00)" />
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="DurationFlag">
                    <param name="visible" value="!String.IsEqual(ListItem.Duration(hh),00)" />
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                    <param name="markupvalue" value="(mins)" />
                    <param name="unitvalue" value="$LOCALIZE[31901]" />
                </include>

                <include content="SpacerFlag">
                    <param name="visible" value="Skin.HasSetting(Media.InformationFlags.Visible) + [!String.IsEmpty(ListItem.Year) | !String.IsEmpty(ListItem.Duration)]" />
                </include>

                <include content="RatingFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="MpaaRatingFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>

                <include content="SpacerFlag">
                    <param name="visible" value="Skin.HasSetting(Media.RatingFlags.Visible) + [Integer.IsGreater(ListItem.Rating,0) | !String.IsEmpty(ListItem.Mpaa)]" />
                </include>

                <include content="VideoCodecFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="VideoResolutionFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="VideoAspectRatioFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="VideoStereoscopicFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>

                <include content="AudioCodecFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="AudioChannelsFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>

                <include content="PictureCodecFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="PictureSizeFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="PictureISOFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="PictureApertureFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>

                <include content="EpgPropertyFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>

                <include content="AddonVersionFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="AddonEnabledPropertyFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="AddonDisabledPropertyFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="AddonUpdateAvailablePropertyFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="AddonBrokenPropertyFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>

                <include content="CompressedPropertyFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
                <include content="LockedPropertyFlag">
                    <param name="flagcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="ViewListForFlag">
        <param name="posx" default="0" />
        <param name="posy" default="0" />
        <param name="width" default="920" />
        <param name="flagcolor" default="$VAR[BackgroundColor]" />
        <param name="backgroundcolor" default="$VAR[MainColor]" />
        <param name="align" default="left" />

        <definition>
            <control type="grouplist">
                <visible>Skin.HasSetting(MediaIcons.Visible)</visible>
                <left>$PARAM[posx]</left>
                <top>$PARAM[posy]</top>
                <width>$PARAM[width]</width>
                <height>60</height>
                <itemgap>0</itemgap>
                <orientation>horizontal</orientation>
                <align>$PARAM[align]</align>

                <include content="WatchedFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="UserRatingFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="PlayCountFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="RecordingPropertyFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="TimerPropertyFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>

                <include content="SpacerFlag">
                    <param name="visible" value="Skin.HasSetting(Media.PersonalFlags.Visible) + [String.IsEqual(ListItem.Overlay,OverlayWatched.png) | Integer.IsGreater(ListItem.UserRating,0) | Integer.IsGreater(ListItem.PlayCount,0) | ListItem.IsRecording | ListItem.HasTimer]" />
                </include>

                <include content="YearFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="DurationFlag">
                    <param name="visible" value="String.IsEqual(ListItem.Duration(hh),00)" />
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="DurationFlag">
                    <param name="visible" value="!String.IsEqual(ListItem.Duration(hh),00)" />
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                    <param name="markupvalue" value="(mins)" />
                    <param name="unitvalue" value="$LOCALIZE[31901]" />
                </include>

                <include content="SpacerFlag">
                    <param name="visible" value="Skin.HasSetting(Media.InformationFlags.Visible) + [!String.IsEmpty(ListItem.Year) | !String.IsEmpty(ListItem.Duration)]" />
                </include>

                <include content="RatingFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="MpaaRatingFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>

                <include content="SpacerFlag">
                    <param name="visible" value="Skin.HasSetting(Media.RatingFlags.Visible) + [Integer.IsGreater(ListItem.Rating,0) | !String.IsEmpty(ListItem.Mpaa)]" />
                </include>

                <include content="VideoCodecFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="VideoResolutionFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="VideoAspectRatioFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="VideoStereoscopicFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>

                <include content="AudioCodecFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="AudioChannelsFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>

                <include content="PictureCodecFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="PictureSizeFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="PictureISOFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="PictureApertureFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>

                <include content="EpgPropertyFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>

                <include content="AddonVersionFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="AddonEnabledPropertyFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="AddonDisabledPropertyFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="AddonUpdateAvailablePropertyFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="AddonBrokenPropertyFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>

                <include content="CompressedPropertyFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
                <include content="LockedPropertyFlag">
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="VideoPlayerListForFlag">
        <param name="posx" default="0" />
        <param name="posy" default="0" />
        <param name="width" default="1000" />
        <param name="flagcolor" default="$VAR[BackgroundColor]" />
        <param name="backgroundcolor" default="$VAR[MainColor]" />

        <definition>
            <control type="grouplist">
                <visible>Skin.HasSetting(MediaIcons.Visible)</visible>
                <left>$PARAM[posx]</left>
                <top>$PARAM[posy]</top>
                <width>$PARAM[width]</width>
                <height>60</height>
                <itemgap>0</itemgap>
                <orientation>horizontal</orientation>

                <include content="UserRatingFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="VideoPlayer.UserRating" />
                </include>
                <include content="PlayCountFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="VideoPlayer.PlayCount" />
                </include>
                <include content="RecordingPropertyFlag">
                    <param name="visible" value="Player.IsRecordingPlayingChannel" />
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>

                <include content="SpacerFlag">
                    <param name="visible" value="Skin.HasSetting(Media.PersonalFlags.Visible) + [Integer.IsGreater(VideoPlayer.UserRating,0) | Integer.IsGreater(VideoPlayer.PlayCount,0) | Player.IsRecordingPlayingChannel]" />
                </include>

                <include content="YearFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="VideoPlayer.Year" />
                </include>
                <include content="DurationFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="Player.Duration" />
                    <param name="markupvalue" value="(mins)" />
                    <param name="unitvalue" value="$LOCALIZE[31901]" />
                </include>

                <include content="SpacerFlag">
                    <param name="visible" value="Skin.HasSetting(Media.InformationFlags.Visible) + [!String.IsEmpty(VideoPlayer.Year) | !String.IsEmpty(Player.Duration)]" />
                </include>

                <include content="RatingFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="VideoPlayer.Rating" />
                </include>
                <include content="MpaaRatingFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="VideoPlayer.Mpaa" />
                </include>

                <include content="SpacerFlag">
                    <param name="visible" value="Skin.HasSetting(Media.RatingFlags.Visible) + [Integer.IsGreater(VideoPlayer.Rating,0) | !String.IsEmpty(VideoPlayer.Mpaa)]" />
                </include>

                <include content="VideoCodecFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="VideoPlayer.VideoCodec" />
                </include>
                <include content="VideoResolutionFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="VideoPlayer.VideoResolution" />
                </include>
                <include content="VideoAspectRatioFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="VideoPlayer.VideoAspect" />
                </include>
                <include content="VideoStereoscopicFlag">
                    <param name="visible" value="VideoPlayer.IsStereoscopic" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>
                <include content="AudioCodecFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="VideoPlayer.AudioCodec" />
                    <param name="fileextensionvalue" value="" />
                </include>
                <include content="AudioChannelsFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="VideoPlayer.AudioChannels" />
                </include>
                <include content="EpgPropertyFlag">
                    <param name="visible" value="VideoPlayer.HasEpg" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>
                <include content="TeletextPropertyFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <include content="InternetStreamPropertyFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>
                <include content="LockedPropertyFlag">
                    <param name="visible" value="VideoPlayer.Content(LiveTV) + Pvr.ActStreamIsEncrypted" />
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="MusicPlayerListForFlag">
        <param name="posx" default="0" />
        <param name="posy" default="0" />
        <param name="width" default="1000" />
        <param name="flagcolor" default="$VAR[BackgroundColor]" />
        <param name="backgroundcolor" default="$VAR[MainColor]" />

        <definition>
            <control type="grouplist">
                <visible>Skin.HasSetting(MediaIcons.Visible)</visible>
                <left>$PARAM[posx]</left>
                <top>$PARAM[posy]</top>
                <width>$PARAM[width]</width>
                <height>60</height>
                <itemgap>0</itemgap>
                <orientation>horizontal</orientation>
            
                <include content="UserRatingFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="MusicPlayer.UserRating" />
                </include>
                <include content="RecordingPropertyFlag">
                    <param name="visible" value="Player.IsRecordingPlayingChannel" />
                    <param name="flagcolor" value="$PARAM[backgroundcolor]" />
                    <param name="backgroundcolor" value="$PARAM[flagcolor]" />
                </include>

                <include content="SpacerFlag">
                    <param name="visible" value="Skin.HasSetting(Media.PersonalFlags.Visible) + [Integer.IsGreater(MusicPlayer.UserRating,0) | Player.IsRecordingPlayingChannel]" />
                </include>

                <include content="YearFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="MusicPlayer.Year" />
                </include>
                <include content="DurationFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="Player.Duration" />
                </include>

                <include content="SpacerFlag">
                    <param name="visible" value="Skin.HasSetting(Media.InformationFlags.Visible) + [!String.IsEmpty(MusicPlayer.Year) | !String.IsEmpty(Player.Duration)]" />
                </include>

                <include content="RatingFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="MusicPlayer.Rating" />
                </include>

                <include content="SpacerFlag">
                    <param name="visible" value="Skin.HasSetting(Media.RatingFlags.Visible) + Integer.IsGreater(MusicPlayer.Rating,0)" />
                </include>

                <include content="AudioCodecFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="MusicPlayer.Codec" />
                    <param name="fileextensionvalue" value="" />
                </include>
                <include content="AudioChannelsFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="MusicPlayer.Channels" />
                </include>
                <include content="AudioBitrateFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>
                <include content="AudioSamplerateFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>

                <include content="InternetStreamPropertyFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="SlideshowListForFlag">
        <param name="posx" default="0" />
        <param name="posy" default="0" />
        <param name="width" default="1000" />
        <param name="flagcolor" default="$VAR[BackgroundColor]" />
        <param name="backgroundcolor" default="$VAR[MainColor]" />

        <definition>
            <control type="grouplist">
                <visible>Skin.HasSetting(MediaIcons.Visible)</visible>
                <left>$PARAM[posx]</left>
                <top>$PARAM[posy]</top>
                <width>$PARAM[width]</width>
                <height>60</height>
                <itemgap>0</itemgap>
                <orientation>horizontal</orientation>

                <include content="PictureCodecFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="filenamevalue" value="Slideshow.Filename" />
                </include>
                <include content="PictureSizeFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="Slideshow.Resolution" />
                </include>
                <include content="PictureApertureFlag">
                    <param name="flagcolor" value="$PARAM[flagcolor]" />
                    <param name="backgroundcolor" value="$PARAM[backgroundcolor]" />
                    <param name="value" value="Slideshow.Aperture" />
                </include>
            </control>
        </definition>
    </include>
</includes>
