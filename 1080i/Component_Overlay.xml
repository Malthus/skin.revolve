<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <constant name="HeightForBackgroundForOverlay">46</constant>

    <constant name="PosYForUpperBackgroundForOverlay">12</constant>
    <constant name="PosYForUpperLabelForOverlay">17</constant>
    <constant name="PosYForUpperIconForOverlay">5</constant>
    <constant name="PosYForUpperButtonForOverlay">5</constant>

    <constant name="PosYForLowerBackgroundForOverlay">1022</constant>
    <constant name="PosYForLowerLabelForOverlay">1027</constant>
    <constant name="PosYForLowerIconForOverlay">1015</constant>

    <expression name="VideoFullScreenClockVisible">[Window.Is(fullscreenvideo) + [String.IsEqual(Skin.String(Media.VideoFullScreen.ClockMode),A) | [String.IsEqual(Skin.String(Media.VideoFullScreen.ClockMode),P) + Player.Paused]]]</expression>
    <expression name="MusicVisualisationClockVisible">[Window.Is(visualisation) + [String.IsEqual(Skin.String(Media.MusicVisualisation.ClockMode),A) | [String.IsEqual(Skin.String(Media.MusicVisualisation.ClockMode),P) + Player.Paused]]]</expression>
    <expression name="GameFullScreenClockVisible">[Window.Is(fullscreengame) + [String.IsEqual(Skin.String(Media.GameFullScreen.ClockMode),A) | [String.IsEqual(Skin.String(Media.GameFullScreen.ClockMode),P) + Player.Paused]]]</expression>
    <expression name="SlideShowClockVisible">[Window.Is(slideshow) + [String.IsEqual(Skin.String(Media.SlideShowClockVisible.ClockMode),A) | [String.IsEqual(Skin.String(Media.SlideShowClockVisible.ClockMode),P) + Player.Paused]]]</expression>

    <expression name="VideoFullScreenRssFeedVisible">[Window.Is(fullscreenvideo) + Skin.HasSetting(Media.VideoFullScreen.RssFeedVisible)]</expression>
    <expression name="MusicVisualisationRssFeedVisible">[Window.Is(visualisation) + Skin.HasSetting(Media.MusicVisualisation.RssFeedVisible)]</expression>
    <expression name="GameFullScreenRssFeedVisible">[Window.Is(fullscreengame) + Skin.HasSetting(Media.GameFullScreen.RssFeedVisible)]</expression>
    <expression name="SlideShowRssFeedVisible">[Window.Is(slideshow) + Skin.HasSetting(Media.SlideShow.RssFeedVisible)]</expression>

    <expression name="VideoFullScreenLowerBackgroundVisible">[Window.Is(fullscreenvideo) + Skin.HasSetting(Media.VideoFullScreen.LowerBackgroundVisible)]</expression>
    <expression name="MusicVisualisationLowerBackgroundVisible">[Window.Is(visualisation) + Skin.HasSetting(Media.MusicVisualisation.LowerBackgroundVisible)]</expression>
    <expression name="GameFullScreenLowerBackgroundVisible">[Window.Is(fullscreengame) + Skin.HasSetting(Media.GameFullScreen.LowerBackgroundVisible)]</expression>
    <expression name="SlideShowLowerBackgroundVisible">[Window.Is(slideshow) + Skin.HasSetting(Media.SlideShow.LowerBackgroundVisible)]</expression>

    <variable name="MediaLabelForOverlay">
        <value condition="Window.IsVisible(extendedprogressdialog)"></value>
        <value condition="Player.HasVideo">$INFO[VideoPlayer.ChannelNumberLabel,,. ]$INFO[VideoPlayer.ChannelName]$INFO[VideoPlayer.TVShowTitle,, | ]$INFO[VideoPlayer.Season,(,$INFO[VideoPlayer.Episode, /])] $INFO[VideoPlayer.Title]</value>
        <value condition="Player.HasAudio">$INFO[MusicPlayer.Artist,, | ]$INFO[MusicPlayer.Album,, | ]$INFO[MusicPlayer.Title]$INFO[MusicPlayer.Year, | ,]</value>
        <value>$INFO[Player.Title]</value>
    </variable>

    <variable name="TimeLabelForOverlay">
        <value condition="Window.IsVisible(volumebar)"></value>
        <value condition="Player.HasDuration">$INFO[Player.Time] / $INFO[Player.Duration]</value>
        <value>$INFO[Player.Time]</value>
    </variable>

    <variable name="ClockAndWeatherLabelForOverlay">
        <value condition="Skin.HasSetting(Overlay.ClockTime.Visible) + Skin.HasSetting(Overlay.WeatherTemperature.Visible) + Weather.IsFetched">$INFO[Weather.Temperature] | $INFO[System.Time(hh:mm)]</value>
        <value condition="Skin.HasSetting(Overlay.ClockTime.Visible) + Skin.HasSetting(Overlay.WeatherTemperature.Visible) + !Weather.IsFetched">$LOCALIZE[10006] | $INFO[System.Time(hh:mm)]</value>
        <value condition="!Skin.HasSetting(Overlay.ClockTime.Visible) + Skin.HasSetting(Overlay.WeatherTemperature.Visible) + Weather.IsFetched">$INFO[Weather.Temperature]</value>
        <value condition="!Skin.HasSetting(Overlay.ClockTime.Visible) + Skin.HasSetting(Overlay.WeatherTemperature.Visible) + !Weather.IsFetched">$LOCALIZE[10006]</value>
        <value>$INFO[System.Time(hh:mm)]</value>
    </variable>

    <include name="GlobalOverlay">
        <param name="buttonid" default="200" />
        <param name="controlid" default="52" />

        <definition>
            <control type="group">
                <include content="InformationBackgroundOverlay" />
                <include content="BackButtonOverlay" />
                <include content="ClockAndWeatherOverlay" />
                <include content="MediaPlayerOverlay" />

                <include content="ValuesOverlay">
                    <param name="buttonid" value="$PARAM[buttonid]" />
                    <param name="controlid" value="$PARAM[controlid]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="MediaOverlay">
        <definition>
            <include content="BackgroundForOverlay">
                <param name="visible" value="$EXP[VideoFullScreenLowerBackgroundVisible] | $EXP[MusicVisualisationLowerBackgroundVisible] | $EXP[GameFullScreenLowerBackgroundVisible] | $EXP[SlideShowLowerBackgroundVisible]" />
                <param name="posy" value="PosYForLowerBackgroundForOverlay" />
            </include>

            <control type="group">
                <visible>$EXP[VideoFullScreenRssFeedVisible] | $EXP[MusicVisualisationRssFeedVisible] | $EXP[GameFullScreenRssFeedVisible] | $EXP[SlideShowRssFeedVisible]</visible>
                <include content="FullScreenMediaRssFeed" />
            </control>

            <control type="group">
                <visible>$EXP[VideoFullScreenClockVisible] | $EXP[MusicVisualisationClockVisible] | $EXP[GameFullScreenClockVisible] | $EXP[SlideShowClockVisible]</visible>
                <include content="ClockOverlay">
                    <param name="textcolor" value="$VAR[BackgroundColor]" />
                    <param name="outlinecolor" value="$VAR[MainColor]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="InformationBackgroundOverlay">
        <definition>
            <control type="group">
                <include content="BackgroundForOverlay">
                    <param name="visible" value="Skin.HasSetting(Media.OverlayBackground.Visible) + Window.IsVisible(notification)" />
                    <param name="posy" value="PosYForUpperBackgroundForOverlay" />
                </include>

                <include content="BackgroundForOverlay">
                    <param name="visible" value="Skin.HasSetting(Media.OverlayBackground.Visible) + [Window.IsVisible(extendedprogressdialog) | Window.IsVisible(volumebar) | Player.HasMedia | !$EXP[HasFinalSkinSettingsValues]]" />
                    <param name="posy" value="PosYForLowerBackgroundForOverlay" />
                </include>
            </control>
        </definition>
    </include>

    <include name="BackButtonOverlay">
        <definition>
            <include content="CircleButton">
                <param name="visible" value="Skin.HasSetting(BackButton.Visible) + !Window.Is(home) + !Window.IsVisible(notification)" />
                <param name="id" value="9999" />
                <param name="posx" value="20" />
                <param name="posy" value="PosYForUpperButtonForOverlay" />
                <param name="width" value="60" />
                <param name="height" value="60" />
                <param name="texturefocus" value="controls/button-back.png" />
                <param name="texturenofocus" value="controls/button-back.png" />
                <param name="onclick" value="Close" />
            </include>
        </definition>
    </include>

    <include name="ClockAndWeatherOverlay">
        <param name="textcolor" default="$VAR[SecondaryColor]" />
        <param name="outlinecolor" default="$VAR[BackgroundColor]" />
        
        <definition>
            <control type="group">
                <visible>[Skin.HasSetting(Overlay.ClockTime.Visible) | Skin.HasSetting(Overlay.WeatherTemperature.Visible)] + !Window.Is(home)</visible>
                <include content="LabelForOverlay">
                    <param name="posx" value="1900" />
                    <param name="posy" value="PosYForUpperLabelForOverlay" />
                    <param name="width" value="200" />
                    <param name="textcolor" value="$PARAM[textcolor]" />
                    <param name="outlinecolor" value="$PARAM[outlinecolor]" />
                    <param name="align" value="right" />
                    <param name="label" value="$VAR[ClockAndWeatherLabelForOverlay]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="ClockOverlay">
        <param name="textcolor" default="$VAR[SecondaryColor]" />
        <param name="outlinecolor" default="$VAR[BackgroundColor]" />

        <definition>
            <include content="LabelForOverlay">
                <param name="id" value="2" />
                <param name="posx" value="1900" />
                <param name="posy" value="PosYForUpperLabelForOverlay" />
                <param name="width" value="200" />
                <param name="textcolor" value="$PARAM[textcolor]" />
                <param name="outlinecolor" value="$PARAM[outlinecolor]" />
                <param name="align" value="right" />
                <param name="label" value="$INFO[System.Time(hh:mm)]" />
            </include>
        </definition>
    </include>

    <include name="MediaPlayerOverlay">
        <definition>
            <control type="group">
                <visible>Player.HasMedia</visible>
                <include content="ArtworkForOverlay" />

                <include content="LabelForOverlay">
                    <param name="posx" value="1380" />
                    <param name="width" value="1360" />
                    <param name="align" value="right" />
                    <param name="label" value="$VAR[MediaLabelForOverlay]" />
                </include>

                <include content="LabelForOverlay">
                    <param name="posx" value="1380" />
                    <param name="width" value="40" />
                    <param name="align" value="center" />
                    <param name="label" value="|" />
                </include>

                <include content="LabelForOverlay">
                    <param name="posx" value="1420" />
                    <param name="width" value="480" />
                    <param name="align" value="left" />
                    <param name="label" value="$VAR[TimeLabelForOverlay]" />
                </include>

                <include content="OverlayForPlayer" />
            </control>
        </definition>
    </include>

    <include name="ValuesOverlay">
        <param name="buttonid" default="200" />
        <param name="controlid" default="52" />

        <definition>
            <include content="ButtonForValues">
                <param name="buttonid" value="$PARAM[buttonid]" />
                <param name="controlid" value="$PARAM[controlid]" />
            </include>

            <include content="OverlayForValues" />
        </definition>
    </include>

    <include name="BackgroundForOverlay">
        <param name="visible" default="Skin.HasSetting(Media.OverlayBackground.Visible)" />
        <param name="posy" default="PosYForLowerBackgroundForOverlay" />

        <definition>
            <control type="image">
                <visible>$PARAM[visible]</visible>
                <posx>0</posx>
                <posy>$PARAM[posy]</posy>
                <width>1920</width>
                <height>HeightForBackgroundForOverlay</height>
                <texture colordiffuse="$VAR[FademaskColor]">white.png</texture>
            </control>
        </definition>
    </include>

    <include name="ArtworkForOverlay">
        <definition>
            <control type="group">
                <visible>Player.HasMedia + Skin.HasSetting(Media.PlayerArtwork.Visible)</visible>

                <control type="group">
                    <visible>Integer.IsGreater(Skin.String(Background.Animation.Level),1)</visible>
                    <include content="OrbitCircle">
                        <param name="posx" value="1781" />
                        <param name="posy" value="941" />
                        <param name="size" value="25" />
                        <param name="radius" value="145" />
                        <param name="time" value="10000" />
                    </include>
                </control>
                
                <control type="group">
                    <visible>Integer.IsGreater(Skin.String(Background.Animation.Level),3)</visible>
                    <include content="OrbitCircle">
                        <param name="posx" value="1781" />
                        <param name="posy" value="941" />
                        <param name="size" value="30" />
                        <param name="radius" value="175" />
                        <param name="time" value="8500" />
                        <param name="direction" value="false" />
                    </include>
                    
                    <include content="OrbitCircle">
                        <param name="posx" value="1781" />
                        <param name="posy" value="941" />
                        <param name="size" value="10" />
                        <param name="radius" value="215" />
                        <param name="time" value="6000" />
                        <param name="direction" value="false" />
                    </include>

                    <include content="OrbitCircle">
                        <param name="posx" value="1781" />
                        <param name="posy" value="941" />
                        <param name="size" value="20" />
                        <param name="radius" value="250" />
                        <param name="time" value="13000" />
                        <param name="direction" value="false" />
                    </include>
                </control>

                <control type="group">
                    <posx>1646</posx>
                    <posy>806</posy>
                    <include content="DefaultCirclePlayerMediaIcon" />

                    <control type="button" id="9990">
                        <description>Invisible Mouse Control For Media Controls Button</description>
                        <posx>20</posx>
                        <posy>20</posy>
                        <width>230</width>
                        <height>230</height>
                        <texturenofocus></texturenofocus>
                        <texturefocus></texturefocus>
                        <font></font>
                        <label></label>
                        <onclick>SetProperty(DialogCloseButton,True,114)</onclick>
                        <onclick>ActivateWindow(playercontrols)</onclick>
                    </control>
                </control>
            </control>
        </definition>
    </include>

    <include name="LabelForOverlay">
        <param name="id" default="0" />
        <param name="posx" default="1420" />
        <param name="posy" default="PosYForLowerLabelForOverlay" />
        <param name="width" default="1300" />
        <param name="height" default="30" />
        <param name="textcolor" default="$VAR[SecondaryColor]" />
        <param name="outlinecolor" default="$VAR[BackgroundColor]" />
        <param name="align" default="right" />
        <param name="label" default="" />

        <definition>
            <include content="OutlineLabel">
                <param name="id" value="$PARAM[id]" />
                <param name="backgroundid" value="$PARAM[id]" />
                <param name="posx" value="$PARAM[posx]" />
                <param name="posy" value="$PARAM[posy]" />
                <param name="width" value="$PARAM[width]" />
                <param name="height" value="$PARAM[height]" />
                <param name="font" value="MessageTextFont" />
                <param name="textcolor" value="$PARAM[textcolor]" />
                <param name="outlinecolor" value="$PARAM[outlinecolor]" />
                <param name="outlinesize" value="2" />
                <param name="align" value="$PARAM[align]" />
                <param name="scroll" value="true" />
                <param name="label" value="$PARAM[label]" />
            </include>
        </definition>
    </include>

    <include name="FadeAnimationForOverlay">
        <definition>
            <animation effect="fade" start="0" end="100" time="WindowFadeDuration">WindowOpen</animation>
            <animation effect="fade" start="0" end="100" time="WindowFadeDuration">Visible</animation>
            <animation effect="fade" start="100" end="0" time="WindowFadeDuration">Hidden</animation>
            <animation effect="fade" start="100" end="0" time="WindowFadeDuration">WindowClose</animation>
        </definition>
    </include>
</includes>
