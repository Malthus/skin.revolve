<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include file="SkinSettings_HomeMenu.xml" />

	<include name="DefaultSettingsForSkinSettings">
        <definition>
            <onfocus>Skin.ResetSettings</onfocus>
            
            <include>BackgroundSettingsForSkinSettings</include>
            <include>ColorsSettingsForSkinSettings</include>
            <include>HomeMenuItemsSettingsForSkinSettings</include>
            <include>CircleItemsSettingsForSkinSettings</include>
            <include>AddonSettingsForSkinSettings</include>
            <include>MiscellaneousSettingsForSkinSettings</include>
            <include>DebugSettingsForSkinSettings</include>
            
            <onfocus>Skin.SetBool(RevolveConfiguration)</onfocus>
            <onfocus>Skin.SetString(Revolve.Configuration,3.0.2)</onfocus>
        </definition>
	</include>
	
	<include name="BackgroundSettingsForSkinSettings">
        <definition>
            <onfocus>Skin.SetBool(Background.ImageActive)</onfocus>
            <onfocus>Skin.Reset(Background.ImageFaded)</onfocus>
            <onfocus>Skin.Reset(Background.WeatherImageResource)</onfocus>
            <onfocus>Skin.SetBool(Background.ImageFanartForFiles)</onfocus>
            <onfocus>Skin.SetBool(Background.VisualiserActive)</onfocus>
            <onfocus>Skin.Reset(Background.VisualiserFaded)</onfocus>
            <onfocus>Skin.SetBool(Background.VideoActive)</onfocus>
            <onfocus>Skin.Reset(Background.VideoFaded)</onfocus>

            <onfocus>Skin.SetString(Background.AnimationLevel,2)</onfocus>
        </definition>
	</include>
	
	<include name="ColorsSettingsForSkinSettings">
        <definition>
            <onfocus>Skin.Reset(Colors.PrimaryColorTheme)</onfocus>
            <onfocus>Skin.Reset(Colors.BackgroundColorTheme)</onfocus>

            <onfocus>Skin.Reset(Colors.MainColorCustomValue)</onfocus>
            <onfocus>Skin.Reset(Colors.SelectColorCustomValue)</onfocus>
            <onfocus>Skin.Reset(Colors.HighlightColorCustomValue)</onfocus>
            <onfocus>Skin.Reset(Colors.SecondaryColorCustomValue)</onfocus>
            <onfocus>Skin.Reset(Colors.TextColorCustomValue)</onfocus>
            <onfocus>Skin.Reset(Colors.BackgroundColorCustomValue)</onfocus>

            <onfocus>Skin.Reset(Colors.ButtonAreaSeparate)</onfocus>
        </definition>
	</include>

	<include name="HomeMenuItemsSettingsForSkinSettings">
        <definition>
            <onfocus>Skin.SetBool(PlayDiscOption.Active)</onfocus>
            <onfocus>Skin.Reset(PlayDiscOption.BackgroundImage)</onfocus>
            <onfocus>Skin.SetBool(FavouritesOption.Active)</onfocus>
            <onfocus>Skin.Reset(FavouritesOption.BackgroundImage)</onfocus>
            <onfocus>Skin.Reset(Custom01Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom02Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom03Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom04Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom05Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom06Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom07Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom08Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom09Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom10Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom11Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom12Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom13Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom14Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom15Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom16Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom17Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom18Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom19Option.Active)</onfocus>
            <onfocus>Skin.Reset(Custom20Option.Active)</onfocus>
            <onfocus>Skin.SetBool(TVOption.Active)</onfocus>
            <onfocus>Skin.Reset(TVOption.BackgroundImage)</onfocus>
            <onfocus>Skin.SetBool(RadioOption.Active)</onfocus>
            <onfocus>Skin.Reset(RadioOption.BackgroundImage)</onfocus>
            <onfocus>Skin.SetBool(VideosOption.Active)</onfocus>
            <onfocus>Skin.Reset(VideosOption.BackgroundImage)</onfocus>
            <onfocus>Skin.Reset(VideosOption.Immutable)</onfocus>
            <onfocus>Skin.Reset(MoviesOption.Active)</onfocus>
            <onfocus>Skin.Reset(MoviesOption.BackgroundImage)</onfocus>
            <onfocus>Skin.Reset(TVShowsOption.Active)</onfocus>
            <onfocus>Skin.Reset(TVShowsOption.BackgroundImage)</onfocus>
            <onfocus>Skin.Reset(MusicVideosOption.Active)</onfocus>
            <onfocus>Skin.Reset(MusicVideosOption.BackgroundImage)</onfocus>
            <onfocus>Skin.Reset(CustomVideosOption.Active)</onfocus>
            <onfocus>Skin.Reset(CustomVideosOption.BackgroundImage)</onfocus>
            <onfocus>Skin.SetBool(MusicOption.Active)</onfocus>
            <onfocus>Skin.Reset(MusicOption.BackgroundImage)</onfocus>
            <onfocus>Skin.Reset(MusicOption.Immutable)</onfocus>
            <onfocus>Skin.Reset(AlbumsOption.Active)</onfocus>
            <onfocus>Skin.Reset(AlbumsOption.BackgroundImage)</onfocus>
            <onfocus>Skin.Reset(CustomMusicOption.Active)</onfocus>
            <onfocus>Skin.Reset(CustomMusicOption.BackgroundImage)</onfocus>
            <onfocus>Skin.Reset(BooksOption.Active)</onfocus>
            <onfocus>Skin.Reset(BooksOption.BackgroundImage)</onfocus>
            <onfocus>Skin.SetBool(PicturesOption.Active)</onfocus>
            <onfocus>Skin.Reset(PicturesOption.BackgroundImage)</onfocus>
            <onfocus>Skin.Reset(CustomPicturesOption.Active)</onfocus>
            <onfocus>Skin.Reset(CustomPicturesOption.BackgroundImage)</onfocus>
            <onfocus>Skin.Reset(GamesOption.Active)</onfocus>
            <onfocus>Skin.Reset(GamesOption.BackgroundImage)</onfocus>
            <onfocus>Skin.SetBool(ProgramsOption.Active)</onfocus>
            <onfocus>Skin.Reset(ProgramsOption.BackgroundImage)</onfocus>
            <onfocus>Skin.SetBool(WeatherOption.Active)</onfocus>
            <onfocus>Skin.Reset(WeatherOption.BackgroundImage)</onfocus>
            <onfocus>Skin.Reset(FileManagerOption.Active)</onfocus>
            <onfocus>Skin.Reset(FileManagerOption.BackgroundImage)</onfocus>
            <onfocus>Skin.Reset(AddonsOption.Active)</onfocus>
            <onfocus>Skin.Reset(AddonsOption.BackgroundImage)</onfocus>
            <onfocus>Skin.SetBool(SettingsOption.Active)</onfocus>
            <onfocus>Skin.Reset(SettingsOption.BackgroundImage)</onfocus>
            <onfocus>Skin.SetBool(ExitOption.Active)</onfocus>
            <onfocus>Skin.Reset(ExitOption.BackgroundImage)</onfocus>
        </definition>
	</include>

	<include name="CircleItemsSettingsForSkinSettings">
        <definition>
            <onfocus>Skin.Reset(CircleNextAired.Enable)</onfocus>
            <onfocus>Skin.Reset(CircleNextAired.NotInvisible)</onfocus>
            <onfocus>Skin.SetString(CircleMovieOption.Name,$LOCALIZE[31721] $LOCALIZE[31711])</onfocus>
            <onfocus>Skin.SetString(CircleMovieOption.Source,LatestMovie.%d)</onfocus>
            <onfocus>Skin.Reset(CircleMovieOption.NotInvisible)</onfocus>
            <onfocus>Skin.SetString(CircleEpisodeOption.Name,$LOCALIZE[31722] $LOCALIZE[31711])</onfocus>
            <onfocus>Skin.SetString(CircleEpisodeOption.Source,LatestEpisode.%d)</onfocus>
            <onfocus>Skin.Reset(CircleEpisodeOption.NotInvisible)</onfocus>
            <onfocus>Skin.SetString(CircleAlbumOption.Name,$LOCALIZE[31725] $LOCALIZE[31711])</onfocus>
            <onfocus>Skin.SetString(CircleAlbumOption.Source,LatestAlbum.%d)</onfocus>
            <onfocus>Skin.Reset(CircleAlbumOption.NotInvisible)</onfocus>
            <onfocus>Skin.Reset(CircleExitMenu.Enable)</onfocus>
        </definition>
	</include>

	<include name="AddonSettingsForSkinSettings">
        <definition>
            <onfocus condition="System.HasAddon(script.cu.lrclyrics)">Skin.SetString(Music.LyricsAddon,script.cu.lrclyrics)</onfocus>
            <onfocus condition="System.HasAddon(script.cu.lrclyrics)">Skin.SetString(AddonLyrics,script.cu.lrclyrics)</onfocus>
            <onfocus condition="!System.HasAddon(script.cu.lrclyrics)">Skin.Reset(Music.LyricsAddon)</onfocus>
            <onfocus condition="!System.HasAddon(script.cu.lrclyrics)">Skin.Reset(AddonLyrics)</onfocus>
        </definition>
	</include>

	<include name="MiscellaneousSettingsForSkinSettings">
        <definition>
            <onfocus>Skin.SetBool(TitleScreen.Visible)</onfocus>
            <onfocus>Skin.SetBool(SideMenu.Grouped)</onfocus>
            <onfocus>Skin.SetBool(SideMenu.Visible)</onfocus>
            <onfocus>Skin.SetBool(SideMenu.GlobalSearch)</onfocus>
            <onfocus>Skin.SetBool(ViewScrollbar.Visible)</onfocus>
            <onfocus>Skin.SetBool(BackButton.Visible)</onfocus>
            <onfocus>Skin.SetBool(Overlay.BackgroundVisible)</onfocus>
            <onfocus>Skin.SetBool(RSSFeed.BackgroundVisible)</onfocus>
            <onfocus>Skin.SetBool(PlayerArtwork.Visible)</onfocus>
            <onfocus>Skin.SetBool(MediaIcons.Visible)</onfocus>
            <onfocus>Skin.SetString(BusyAnimation.Type,A)</onfocus>
            <onfocus>Skin.SetBool(NoInformationLabel.Visible)</onfocus>
            <onfocus>Skin.SetString(Thumbnails.Type,C)</onfocus>
            <onfocus>Skin.Reset(Thumbnails.NameVisible)</onfocus>
            <onfocus>Skin.SetBool(Landscape.DescriptionVisible)</onfocus>
            <onfocus>Skin.Reset(Settings.DialogInfoAutoRefresh)</onfocus>
            <onfocus>Skin.Reset(Settings.DialogInfoAutoScroll)</onfocus>
            <onfocus>Skin.SetBool(Settings.HelpVisible)</onfocus>
        </definition>
	</include>
    
	<include name="DebugSettingsForSkinSettings">
        <definition>
            <onfocus>Skin.Reset(Debug.GridVisible)</onfocus>
            <onfocus>Skin.Reset(Debug.InfoVisible)</onfocus>
            <onfocus>Skin.SetString(Debug.AdditionalInfo,N)</onfocus>
            <onfocus>Skin.Reset(Debug.ListBorderVisible)</onfocus>
        </definition>
	</include>

	<include name="ColorSettingButtonForSkinSettings">
        <param name="id" default="0" />
        <param name="label" default="-" />
        <param name="enable" default="false" />
        <param name="colorsetting" default="-" />
        <param name="relatedcolorsetting" default="-" />
        <param name="relatedcolorprefix" default="$NUMBER[80]" />

        <definition>
            <control type="button" id="$PARAM[id]">
                <enable>$PARAM[enable]</enable>
                <width>1100</width>
                <height>40</height>
                <align>left</align>
                <label>$PARAM[label]</label>
                <onclick>SetProperty(DialogRelatedColorPrefix,$PARAM[relatedcolorprefix],1185)</onclick>
                <onclick>SetProperty(DialogTarget,$PARAM[colorsetting],1185)</onclick>
                <onclick>SetProperty(DialogRelatedTarget,$PARAM[relatedcolorsetting],1185)</onclick>
                <onclick>ActivateWindow(1185)</onclick>
            </control>
        </definition>
	</include>

	<include name="ColorPickerButtonForSkinSettings">
        <param name="id" default="0" />
        <param name="posx" default="0" />
        <param name="posy" default="0" />
        <param name="color" default="FFFFFF" />
        <param name="relatedcolorprefix" default="$INFO[Window.Property(DialogRelatedColorPrefix)]" />
        <param name="target" default="Window.Property(DialogTarget)" />
        <param name="relatedtarget" default="Window.Property(DialogRelatedTarget)" />
        <param name="onup" default="Noop" />
        <param name="ondown" default="Noop" />
        <param name="onleft" default="Noop" />
        <param name="onright" default="Noop" />
    
        <definition>
            <control type="group">
                <posx>$PARAM[posx]</posx>
                <posy>$PARAM[posy]</posy>
                <width>100</width>
                <height>80</height>
            
                <control type="image">
                    <visible>Control.HasFocus($PARAM[id])</visible>
                    <posx>-5</posx>
                    <posy>-5</posy>
                    <width>110</width>
                    <height>90</height>
                    <texture colordiffuse="$VAR[MainColor]" border="20">controls/rectangle-fill.png</texture>
                </control>

                <control type="button" id="$PARAM[id]">
                    <posx>5</posx>
                    <posy>5</posy>
                    <width>90</width>
                    <height>70</height>
                    <texturenofocus colordiffuse="FF$PARAM[color]" border="20">controls/rectangle-fill.png</texturenofocus>
                    <texturefocus colordiffuse="FF$PARAM[color]" border="20">controls/rectangle-fill.png</texturefocus>
                    <align>left</align>
                    <label>-</label>
                    <onup>$PARAM[onup]</onup>
                    <ondown>$PARAM[ondown]</ondown>
                    <onleft>$PARAM[onleft]</onleft>
                    <onright>$PARAM[onright]</onright>
                    <onclick>Skin.SetString($INFO[$PARAM[target]],FF$PARAM[color])</onclick>
					<onclick condition="!IsEmpty($PARAM[relatedtarget])">Skin.SetString($INFO[$PARAM[relatedtarget]],$PARAM[relatedcolorprefix]$PARAM[color])</onclick>
					<onclick>Close</onclick>
                </control>

                <control type="image">
                    <visible>Control.HasFocus($PARAM[id])</visible>
                    <posx>-1</posx>
                    <posy>-1</posy>
                    <width>102</width>
                    <height>82</height>
                    <texture colordiffuse="FF$PARAM[color]" border="20">controls/rectangle-fill.png</texture>
                </control>
            </control>
        </definition>
	</include>

	<include name="ItemsForButtonListInSkinSettings">
        <param name="listid" default="0" />
    
        <definition>
            <itemlayout height="40">
                <include name="ItemForButtonListInSkinSettings">
                    <param name="textcolor" value="$VAR[MainColor]" />
                    <param name="backgroundcolor" value="$VAR[BackgroundColor]" />
                </include>
            </itemlayout>
                
            <focusedlayout height="40">
                <control type="group">
                    <visible>Control.HasFocus($PARAM[listid])</visible>
                    <include name="ItemForButtonListInSkinSettings">
                        <param name="textcolor" value="$VAR[BackgroundColor]" />
                        <param name="backgroundcolor" value="$VAR[MainColor]" />
                    </include>
                </control>
                <control type="group">
                    <visible>!Control.HasFocus($PARAM[listid])</visible>
                    <include name="ItemForButtonListInSkinSettings">
                        <param name="textcolor" value="$VAR[BackgroundColor]" />
                        <param name="backgroundcolor" value="$VAR[SelectColor]" />
                    </include>
                </control>
            </focusedlayout>
        </definition>
	</include>

	<include name="ItemForButtonListInSkinSettings">
        <param name="textcolor" default="$VAR[MainColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="backgroundcoverage" default="false" />
    
        <definition>
            <control type="image">
                <visible>$PARAM[backgroundcoverage]</visible>
                <width>480</width>
                <height>40</height>
                <texture colordiffuse="$PARAM[backgroundcolor]" border="20">controls/rectangle-fill.png</texture>
                <aspectratio>stretch</aspectratio>
            </control>
            <control type="image">
                <width>480</width>
                <height>40</height>
                <texture colordiffuse="$PARAM[backgroundcolor]" border="20">controls/rectangle-fill.png</texture>
                <aspectratio>stretch</aspectratio>
            </control>
            <control type="label">
                <posx>20</posx>
                <width>440</width>
                <height>40</height>
                <font>NormalButtonFont</font>
                <textcolor>$PARAM[textcolor]</textcolor>
                <label>$INFO[ListItem.Label]</label>
            </control>
        </definition>
	</include>

	<include name="ItemForHomeOptionListInSkinSettings">
        <param name="width" default="1100" />
        <param name="textwidth" default="1060" />
        <param name="radioposx" default="1040" />
        <param name="textcolor" default="$VAR[MainColor]" />
        <param name="radiobuttoncolor" default="$VAR[SecondaryColor]" />
        <param name="backgroundcolor" default="$VAR[BackgroundColor]" />
        <param name="backgroundcoverage" default="false" />

        <definition>
            <control type="image">
                <visible>$PARAM[backgroundcoverage]</visible>
                <posx>0</posx>
                <posy>0</posy>
                <width>$PARAM[width]</width>
                <height>40</height>
                <texture colordiffuse="$VAR[BackgroundColor]" border="20">controls/rectangle-fill.png</texture>
            </control>
            <control type="image">
                <posx>0</posx>
                <posy>0</posy>
                <width>$PARAM[width]</width>
                <height>40</height>
                <texture colordiffuse="$PARAM[backgroundcolor]" border="20">controls/rectangle-fill.png</texture>
            </control>

            <control type="label">
                <posx>20</posx>
                <posy>0</posy>
                <width>$PARAM[textwidth]</width>
                <height>40</height>
                <font>NormalButtonFont</font>
                <textcolor>$PARAM[textcolor]</textcolor>
                <align>left</align>
                <aligny>center</aligny>
                <label>$INFO[ListItem.Label]</label>
            </control>
                    
            <control type="image">
                <visible>Substring(ListItem.Property(Active),T,left)</visible>
                <posx>$PARAM[radioposx]</posx>
                <posy>0</posy>
                <width>40</width>
                <height>40</height>
                <texture colordiffuse="$PARAM[radiobuttoncolor]" border="20">controls/circle-dot.png</texture>
            </control>
            <control type="image">
                <visible>!Substring(ListItem.Property(Active),T,left)</visible>
                <posx>$PARAM[radioposx]</posx>
                <posy>0</posy>
                <width>40</width>
                <height>40</height>
                <texture colordiffuse="$PARAM[radiobuttoncolor]" border="20">controls/circle-clear.png</texture>
            </control>
        </definition>
	</include>
</includes>
