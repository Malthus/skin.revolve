<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="ContentNameLabel">
		<value>$INFO[ListItem.Label]</value>
	</variable>
	
	<variable name="ContentSortLetterLabel">
		<value>$INFO[ListItem.SortLetter]</value>
	</variable>
	
	<variable name="ContentCategoryLabel">
		<value condition="!IsEmpty(ListItem.ChannelNumber)">$INFO[ListItem.ChannelGroup,, | ]$INFO[ListItem.ChannelNumber]</value>
		<value condition="Container.Content(movies)">$INFO[ListItem.Director]</value>
		<value condition="Container.Content(tvshows)">$INFO[ListItem.year,, | ]$INFO[ListItem.Rating,, | ]$INFO[ListItem.MPAA]</value>
		<value condition="Container.Content(seasons)">$INFO[ListItem.TVShowTitle]</value>
		<value condition="Container.Content(episodes)">$INFO[ListItem.TVShowTitle]$INFO[ListItem.Season, | $LOCALIZE[20373] ,]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Artist]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Album]</value>
		<value condition="Container.Content(files) + !IsEmpty(Artist)">$INFO[ListItem.Artist]$INFO[ListItem.Album, | ,]</value>
		<value condition="Container.Content(addons)">$INFO[ListItem.Property(Addon.Creator),, | ]$INFO[ListItem.Property(Addon.Type)]</value>
		<value condition="!IsEmpty(ListItem.PictureDatetime)">$INFO[ListItem.FolderName,, | ]$INFO[ListItem.PictureLongDatetime]</value>
		<value condition="Window.IsVisible(pictures) + !ListItem.IsFolder">$INFO[ListItem.FolderName,, | ]$INFO[ListItem.Date]</value>
		<value condition="Window.IsVisible(radiotimers) | Window.IsVisible(tvtimers)">$INFO[ListItem.ChannelNumber]$INFO[ListItem.ChannelName, | ,]</value>
	</variable>

	<variable name="ContentDetailLabel">
		<value condition="StringCompare(ListItem.Label,..)">$INFO[Container.NumItems,, $LOCALIZE[31900]]</value>
		<value condition="!IsEmpty(ListItem.ChannelNumber) + !IsEmpty(ListItem.Title) + ![Window.IsVisible(radiotimers) | Window.IsVisible(tvtimers)]">$INFO[ListItem.Title]$INFO[ListItem.StartDate, | ,]$INFO[ListItem.StartTime, | ,]$INFO[ListItem.EndTime, - ,]</value>
		<value condition="Container.Content(movies)">$INFO[ListItem.Year,, | ]$INFO[ListItem.Duration,, $LOCALIZE[12391]]$INFO[ListItem.Genre, | ,]$INFO[ListItem.MPAA, | ,]</value>
		<value condition="Container.Content(tvshows)">$INFO[ListItem.Property(UnWatchedEpisodes)] / $INFO[ListItem.Property(TotalEpisodes)]</value>
		<value condition="Container.Content(seasons)">$INFO[ListItem.Property(UnWatchedEpisodes)] / $INFO[ListItem.Property(TotalEpisodes)]</value>
		<value condition="Container.Content(episodes)">$INFO[ListItem.Episode,$LOCALIZE[20359] ,]$INFO[ListItem.Duration, | , $LOCALIZE[12391]]$INFO[ListItem.Premiered, | ,]</value>
		<value condition="Container.Content(artists) + !IsEmpty(ListItem.Property(Artist_Born))">$INFO[ListItem.Property(Artist_Born)]$INFO[ListItem.Property(Artist_Died), - ,]</value>
		<value condition="Container.Content(artists) + !IsEmpty(ListItem.Property(Artist_Formed))">$INFO[ListItem.Property(Artist_Formed)]$INFO[ListItem.Property(Artist_Disbanded), - ,]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Year]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Year,, | ]$INFO[ListItem.Duration]$INFO[ListItem.Genre, | ,]</value>
		<value condition="Container.Content(files) + Substring(ListItem.Duration,:)">$INFO[ListItem.Year,, | ]$INFO[ListItem.Duration]</value>
		<value condition="Container.Content(files) + !IsEmpty(ListItem.Duration)">$INFO[ListItem.Year,, | ]$INFO[ListItem.Duration,, $LOCALIZE[12391]]$INFO[ListItem.Genre, | ,]$INFO[ListItem.MPAA, | ,]</value>
		<value condition="Container.Content(files) + !IsEmpty(Year)">$INFO[ListItem.Year]$INFO[ListItem.Genre, | ,]$INFO[ListItem.MPAA, | ,]</value>
		<value condition="Container.Content(addons)">$INFO[ListItem.Property(Addon.Version)]$INFO[ListItem.Property(Addon.Status), | ,]</value>
		<value condition="Window.IsVisible(pictures) + !ListItem.IsFolder">$INFO[ListItem.Size]</value>
		<value condition="Window.IsVisible(radiorecordings) | Window.IsVisible(tvrecordings)">$INFO[ListItem.StartDate]$INFO[ListItem.StartTime, | ,]$INFO[ListItem.EndTime, - ,]</value>
		<value condition="Window.IsVisible(radiotimers) | Window.IsVisible(tvtimers)">$INFO[Pvr.BackendTimers,, $LOCALIZE[19040]]$INFO[Pvr.BackendDiskSpace, | ,]</value>
		<value condition="IsEmpty(ListItem.ChannelNumber)">$INFO[ListItem.Label2]</value>
	</variable>

	<variable name="ContentInformationLabel">
		<value condition="StringCompare(ListItem.Label,..)">$INFO[Container.NumItems,, $LOCALIZE[31900]]</value>
		<value condition="!IsEmpty(ListItem.ChannelNumber) + !Window.IsVisible(radiotimers) + !Window.IsVisible(tvtimers)">$INFO[ListItem.ChannelGroup,, | ]$INFO[ListItem.ChannelNumber]$INFO[ListItem.Title, | ,]$INFO[ListItem.StartDate, | ,]$INFO[ListItem.StartTime, | ,]$INFO[ListItem.EndTime, - ,]</value>
		<value condition="!IsEmpty(ListItem.ChannelNumber) + [Window.IsVisible(radiotimers) | Window.IsVisible(tvtimers)]">$INFO[ListItem.ChannelNumber]$INFO[ListItem.ChannelName, | ,]$INFO[ListItem.StartDate, | ,]$INFO[ListItem.StartTime, | ,]$INFO[ListItem.EndTime, - ,]</value>
		<value condition="!IsEmpty(ListItem.PictureDatetime)">$INFO[ListItem.FolderName,, | ]$INFO[ListItem.PictureDatetime]$INFO[ListItem.Size, | ,]</value>
		<value condition="Container.Content(tvshows)">$INFO[ListItem.Property(UnWatchedEpisodes),, / ]$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20453]]</value>
		<value condition="Container.Content(seasons)">$INFO[ListItem.Property(UnWatchedEpisodes),, / ]$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20453]]</value>
		<value condition="Container.Content(episodes)">$INFO[ListItem.TVShowTitle]$INFO[ListItem.Season, | $LOCALIZE[20373] ,]$INFO[ListItem.Episode, | $LOCALIZE[20359] ,]$INFO[ListItem.Duration, | , $LOCALIZE[12391]]</value>
		<value condition="Container.Content(movies)">$INFO[ListItem.Year,, | ]$INFO[ListItem.Duration,, $LOCALIZE[12391]]$INFO[ListItem.Genre, | ,]$INFO[ListItem.MPAA, | ,]</value>
		<value condition="Container.Content(artists) + !IsEmpty(ListItem.Property(Artist_Born))">$INFO[ListItem.Property(Artist_Born)]$INFO[ListItem.Property(Artist_Died), - ,]</value>
		<value condition="Container.Content(artists) + !IsEmpty(ListItem.Property(Artist_Formed))">$INFO[ListItem.Property(Artist_Formed)]$INFO[ListItem.Property(Artist_Disbanded), - ,]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Artist]$INFO[ListItem.Year, | ,]$INFO[ListItem.Duration, | ,]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Album,, | ]$INFO[ListItem.Year,, | ]$INFO[ListItem.Duration]$INFO[ListItem.Genre, | ,]</value>
		<value condition="Container.Content(files) + Substring(ListItem.Duration,:)">$INFO[ListItem.Album,, | ]$INFO[ListItem.Year,, | ]$INFO[ListItem.Duration]</value>
		<value condition="Container.Content(files) + !IsEmpty(ListItem.Duration)">$INFO[ListItem.Year,, | ]$INFO[ListItem.Duration,, $LOCALIZE[12391]]$INFO[ListItem.Genre, | ,]$INFO[ListItem.MPAA, | ,]</value>
		<value condition="Container.Content(files) + !IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist]$INFO[ListItem.Year, | ,]$INFO[ListItem.Genre, | ,]$INFO[ListItem.MPAA, | ,]</value>
		<value condition="Container.Content(addons)">$INFO[ListItem.Property(Addon.Creator),, | ]$INFO[ListItem.Property(Addon.Type)]$INFO[ListItem.Property(Addon.Version), | ,]$INFO[ListItem.Property(Addon.Status), | ,]</value>
		<value condition="Window.IsVisible(pictures) + !ListItem.IsFolder">$INFO[ListItem.FolderName,, | ]$INFO[ListItem.Date]$INFO[ListItem.Size, | ,]</value>
		<value condition="Window.IsVisible(radiorecordings) | Window.IsVisible(tvrecordings)">$INFO[ListItem.StartDate]$INFO[ListItem.StartTime, | ,]$INFO[ListItem.EndTime, - ,]</value>
		<value condition="Window.IsVisible(radiotimers) | Window.IsVisible(tvtimers)">$INFO[Pvr.BackendTimers,, $LOCALIZE[19040]]$INFO[Pvr.BackendDiskSpace, | ,]</value>
        <value>$INFO[ListItem.Label2]</value>
	</variable>

	<variable name="ContentThumbnail">
		<value condition="!IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="SubString(ListItem.FileExtension,jpg) | SubString(ListItem.FileExtension,jpeg)">$INFO[ListItem.FileNameAndPath]</value>
		<value condition="SubString(ListItem.FileExtension,png)">$INFO[ListItem.FileNameAndPath]</value>
		<value condition="SubString(ListItem.FileExtension,gif)">$INFO[ListItem.FileNameAndPath]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>

	<variable name="ContentPoster">
		<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>

	<variable name="ContentBanner">
		<value condition="!IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value condition="!IsEmpty(ListItem.Art(season.banner))">$INFO[ListItem.Art(season.banner)]</value>
		<value condition="!IsEmpty(ListItem.Art(tvshow.banner))">$INFO[ListItem.Art(tvshow.banner)]</value>
		<value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Property(Fanart_Image)]</value>
		<value condition="!IsEmpty(ListItem.PicturePath)">$INFO[ListItem.PicturePath]</value>
	</variable>
	
	<variable name="ContentNoBannerLabel">
		<value condition="IsEmpty(ListItem.Art(banner)) + IsEmpty(ListItem.Art(season.banner)) + IsEmpty(ListItem.Art(tvshow.banner))">$VAR[ContentNameLabel]</value>
		<value condition="Container.Content(episodes) + IsEmpty(ListItem.Art(banner))">$VAR[ContentNameLabel]</value>
    </variable>

	<variable name="ContentLogo">
		<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
	</variable>
	
	<variable name="ContentOverlay">
		<value condition="ListItem.IsPlaying">icons/overlay-playing.png</value>
		<value condition="ListItem.IsRecording">icons/overlay-recording.png</value>
		<value condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">icons/overlay-watched.png</value>
		<value condition="ListItem.HasTimer">icons/overlay-timer.png</value>
<!--		<value condition="ListItem.HasEpg">icons/overlay-epg.png</value> -->
<!--		<value condition="ListItem.IsStereoscopic">icons/overlay-stereoscopic.png</value> -->
		<value condition="StringCompare(ListItem.Overlay,OverlayRAR.png)">icons/overlay-compressed.png</value>
		<value condition="StringCompare(ListItem.Overlay,OverlayZIP.png)">icons/overlay-compressed.png</value>
<!--		<value condition="ListItem.IsEncrypted">icons/overlay-locked.png</value> -->
		<value condition="StringCompare(ListItem.Overlay,OverlayLocked.png)">icons/overlay-locked.png</value>
		<value condition="StringCompare(ListItem.Overlay,OverlayTrainer.png)">icons/overlay-trainer.png</value>
		<value condition="StringCompare(ListItem.Overlay,OverlayHasTrainer.png)">icons/overlay-trainer.png</value>
	</variable>
	
	<variable name="ContentUnderlay">
		<value condition="ListItem.IsPlaying">elements/circle-mask.png</value>
		<value condition="ListItem.IsRecording">elements/circle-mask.png</value>
		<value condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">elements/circle-mask.png</value>
		<value condition="ListItem.HasTimer">elements/circle-mask.png</value>
<!--		<value condition="ListItem.HasEpg">elements/circle-mask.png</value> -->
<!--		<value condition="ListItem.IsStereoscopic">elements/circle-mask.png</value> -->
		<value condition="StringCompare(ListItem.Overlay,OverlayRAR.png)">elements/circle-mask.png</value>
		<value condition="StringCompare(ListItem.Overlay,OverlayZIP.png)">elements/circle-mask.png</value>
<!--		<value condition="ListItem.IsEncrypted">elements/circle-mask.png</value> -->
		<value condition="StringCompare(ListItem.Overlay,OverlayLocked.png)">elements/circle-mask.png</value>
		<value condition="StringCompare(ListItem.Overlay,OverlayTrainer.png)">elements/circle-mask.png</value>
		<value condition="StringCompare(ListItem.Overlay,OverlayHasTrainer.png)">elements/circle-mask.png</value>
	</variable>
	
	<variable name="ContentSingleImageBackground">
		<value condition="Window.IsVisible(favourites) + !IsEmpty(Container(450).ListItem.Art(fanart))">$INFO[Container(450).ListItem.Art(fanart)]</value>
		<value condition="Window.IsVisible(favourites) + !IsEmpty(Container(450).ListItem.Property(Fanart_Image))">$INFO[Container(450).ListItem.Property(Fanart_Image)]</value>
		<value condition="Window.IsVisible(favourites)">special://skin/backgrounds/favourites.jpg</value>

		<value condition="Window.IsVisible(1101) + !IsEmpty(Container(450).ListItem.Property(BackgroundImage))">$INFO[Container(450).ListItem.Property(BackgroundImage)]</value>
		<value condition="Window.IsVisible(1101)">special://skin/backgrounds/items.jpg</value>
        
		<value condition="Window.IsVisible(1102) + !IsEmpty(Container(450).ListItem.Property(Fanart_image))">$INFO[Container(450).ListItem.Property(fanart_image)]</value>
		<value condition="Window.IsVisible(1102)">special://skin/backgrounds/items.jpg</value>

		<value condition="Window.IsVisible(1103) + !IsEmpty(Container(450).ListItem.Property(BackgroundImage))">$INFO[Container(450).ListItem.Property(BackgroundImage)]</value>
		<value condition="Window.IsVisible(1103)">special://skin/backgrounds/default.jpg</value>

		<value condition="Window.IsVisible(1104) + !IsEmpty(Container(450).ListItem.Property(BackgroundImage))">$INFO[Container(450).ListItem.Property(BackgroundImage)]</value>
		<value condition="Window.IsVisible(1104)">special://skin/backgrounds/favourites.jpg</value>

		<value condition="Window.IsVisible(1120)">black.png</value>
		<value condition="Window.IsVisible(1121)">black.png</value>
        
		<value condition="Window.IsVisible(settings) + !IsEmpty(Container(450).ListItem.Icon)">$INFO[Container(450).ListItem.Icon]</value>
		<value condition="Window.IsVisible(settings)">special://skin/backgrounds/settings.jpg</value>

		<value condition="Window.IsVisible(1150) + !IsEmpty(Container(450).ListItem.Icon)">$INFO[Container(450).ListItem.Icon]</value>
		<value condition="Window.IsVisible(1150)">special://skin/backgrounds/exit.jpg</value>
        
		<value condition="Window.IsVisible(weather) + !IsEmpty(Skin.String(Background.Image.WeatherResource.Path)) + !Substring(Skin.String(Background.Image.WeatherResource.Path),multi)">resource://$INFO[Skin.String(Background.Image.WeatherResource.Path)]/$INFO[Window(Weather).Property(Current.FanartCode),,.jpg]</value>
		<value condition="Window.IsVisible(weather) + Substring(Skin.String(Background.Image.WeatherResource.Path),multi)">white.png</value>
		<value condition="Window.IsVisible(weather)">special://skin/backgrounds/weather.jpg</value>
		<value condition="Window.IsVisible(filemanager)">special://skin/backgrounds/filemanager.jpg</value>
		<value condition="Window.IsVisible(eventlog)">special://skin/backgrounds/eventlog.jpg</value>
		
		<value condition="Window.IsVisible(appearancesettings)">special://skin/backgrounds/appearancesettings.jpg</value>
		<value condition="Window.IsVisible(pvrsettings)">special://skin/backgrounds/pvrsettings.jpg</value>
		<value condition="Window.IsVisible(videossettings)">special://skin/backgrounds/videossettings.jpg</value>
		<value condition="Window.IsVisible(musicsettings)">special://skin/backgrounds/musicsettings.jpg</value>
		<value condition="Window.IsVisible(picturessettings)">special://skin/backgrounds/picturessettings.jpg</value>
		<value condition="Window.IsVisible(weathersettings)">special://skin/backgrounds/weathersettings.jpg</value>
		<value condition="Window.IsVisible(profiles)">special://skin/backgrounds/profiles.jpg</value>
		<value condition="Window.IsVisible(systemsettings)">special://skin/backgrounds/systemsettings.jpg</value>
		<value condition="Window.IsVisible(servicesettings)">special://skin/backgrounds/servicesettings.jpg</value>
		<value condition="Window.IsVisible(skinsettings)">special://skin/backgrounds/skinsettings.jpg</value>
		<value condition="Window.IsVisible(systeminfo)">special://skin/backgrounds/systeminfo.jpg</value>
		<value condition="Window.IsVisible(1151)">special://skin/backgrounds/skininfo.jpg</value>

		<value condition="Window.IsVisible(home) + !IsEmpty(Container(300).ListItem.Property(BackgroundImage))">$INFO[Container(300).ListItem.Property(BackgroundImage)]</value>
		<value condition="Window.IsVisible(home) + !IsEmpty(Container(300).ListItem.Property(FallbackImage))">$INFO[Container(300).ListItem.Property(FallbackImage)]</value>
		<value condition="Window.IsVisible(home)">special://skin/backgrounds/default.jpg</value>

		<value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Property(Fanart_Image)]</value>
		<value condition="!IsEmpty(ListItem.PicturePath)">$INFO[ListItem.PicturePath]</value>
        
		<value condition="Container.Content(addons) | Window.IsVisible(addonbrowser)">special://skin/backgrounds/addons.jpg</value>
        <value condition="Container.Content(files) + Skin.HasSetting(Background.Image.FanartForFiles) + !SubString(Container.FolderPath,library,Left)">$INFO[Container.FolderPath,,fanart.jpg]</value>
		<value>special://skin/backgrounds/default.jpg</value>
	</variable>
	
	<variable name="ContentMultiImageBackground">
		<value condition="Window.IsVisible(weather) + Substring(Skin.String(Background.Image.WeatherResource.Path),multi)">resource://$INFO[Skin.String(Background.Image.WeatherResource.Path)]/$INFO[Window(Weather).Property(Current.FanartCode)]</value>
        <value>-</value>
	</variable>

	<variable name="ContentStarRating">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">icons/rating-5.png</value>
		<value condition="StringCompare(ListItem.StarRating,rating4.png)">icons/rating-4.png</value>
		<value condition="StringCompare(ListItem.StarRating,rating3.png)">icons/rating-3.png</value>
		<value condition="StringCompare(ListItem.StarRating,rating2.png)">icons/rating-2.png</value>
		<value condition="StringCompare(ListItem.StarRating,rating1.png)">icons/rating-1.png</value>
		<value condition="StringCompare(ListItem.StarRating,rating0.png)">icons/rating-0.png</value>
		<value>icons/rating-0.png</value>
	</variable>

	<variable name="ContentDescription">
		<value condition="Window.IsVisible(pictures) + !ListItem.IsFolder">$INFO[ListItem.FolderName,$LOCALIZE[20334]: ,[CR]]$INFO[ListItem.PictureDatetime,$LOCALIZE[552]: ,[CR]]$INFO[ListItem.Size,$LOCALIZE[21802]: ,[CR]]$INFO[ListItem.PictureResolution,$LOCALIZE[169]: ,[CR][CR]]$INFO[ListItem.PictureISO,$LOCALIZE[21837]: ,[CR]]$INFO[ListItem.PictureAperture,$LOCALIZE[21826]: $LOCALIZE[31916],[CR]]$INFO[ListItem.PictureExpMode,$LOCALIZE[21832]: ,[CR]]$INFO[ListItem.PictureExposure,$LOCALIZE[21829]: ,[CR]]$INFO[ListItem.PictureExpTime,$LOCALIZE[21830]: ,[CR]]$INFO[ListItem.PictureFocalLen,$LOCALIZE[21827]: ,[CR]]$INFO[ListItem.PictureFocusDist,$LOCALIZE[21828]: ,[CR]]$INFO[ListItem.PictureMeteringMode,$LOCALIZE[21836]: ,[CR]]$INFO[ListItem.PictureCamMake,[CR]$LOCALIZE[21822]: ,[CR]]$INFO[ListItem.PictureCamModel,$LOCALIZE[21823]: ,[CR]]$INFO[ListItem.PictureCCDWidth,$LOCALIZE[21839]: ,]</value>
		<value condition="!IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
		<value condition="!IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
		<value condition="!IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="!IsEmpty(ListItem.Comment)">$INFO[ListItem.Comment]</value>
		<value condition="!IsEmpty(ListItem.Property(Addon.Description))">$INFO[ListItem.Property(Addon.Broken),[B],[/B][CR][CR]]$INFO[ListItem.Property(Addon.Description)]$INFO[ListItem.Property(Addon.Disclaimer),[CR][CR],]</value>
		<value condition="Skin.HasSetting(NoInformationLabel.Visible)">$LOCALIZE[31300]</value>
	</variable>
	
	<variable name="ContentWrapMinusThreeThumbnail">
		<value condition="!IsEmpty(ListItem(-3).Art(thumb))">$INFO[ListItem(-3).Art(thumb)]</value>
		<value>$INFO[ListItem(-3).Icon]</value>
	</variable>

	<variable name="ContentWrapMinusTwoThumbnail">
		<value condition="!IsEmpty(ListItem(-2).Art(thumb))">$INFO[ListItem(-2).Art(thumb)]</value>
		<value>$INFO[ListItem(-2).Icon]</value>
	</variable>

	<variable name="ContentWrapMinusOneThumbnail">
		<value condition="!IsEmpty(ListItem(-1).Art(thumb))">$INFO[ListItem(-1).Art(thumb)]</value>
		<value>$INFO[ListItem(-1).Icon]</value>
	</variable>

	<variable name="ContentWrapPlusOneThumbnail">
		<value condition="!IsEmpty(ListItem(1).Art(thumb))">$INFO[ListItem(1).Art(thumb)]</value>
		<value>$INFO[ListItem(1).Icon]</value>
	</variable>

	<variable name="ContentWrapPlusTwoThumbnail">
		<value condition="!IsEmpty(ListItem(2).Art(thumb))">$INFO[ListItem(2).Art(thumb)]</value>
		<value>$INFO[ListItem(2).Icon]</value>
	</variable>
	
	<variable name="ContentWrapPlusThreeThumbnail">
		<value condition="!IsEmpty(ListItem(3).Art(thumb))">$INFO[ListItem(3).Art(thumb)]</value>
		<value>$INFO[ListItem(3).Icon]</value>
	</variable>

    <variable name="MenuNameLabel">
        <value>$INFO[Container(450).ListItem.Label]</value>
    </variable>

	<variable name="MenuCategoryLabel">
		<value condition="!IsEmpty(Container(450).ListItem.Property(Label3))">$INFO[Container(450).ListItem.Property(Label3)]</value>
		<value condition="Container.Content(tvshows)">$INFO[Container(450).ListItem.Year,, | ]$INFO[Container(450).ListItem.Rating,, | ]$INFO[Container(450).ListItem.MPAA]</value>
		<value condition="Container.Content(seasons)">$INFO[Container(450).ListItem.TVShowTitle]</value>
		<value condition="Container.Content(episodes)">$INFO[Container(450).ListItem.Premiered,, | ]$INFO[Container(450).ListItem.Duration]</value>
		<value condition="Container.Content(movies)">$INFO[Container(450).ListItem.Director]</value>
		<value condition="!IsEmpty(Container(450).ListItem.Album)">$INFO[Container(450).ListItem.Artist]$INFO[Container(450).ListItem.Album, | ,]</value>
		<value condition="!IsEmpty(Container(450).ListItem.Artist)">$INFO[Container(450).ListItem.Artist]</value>
	</variable>
	
	<variable name="MenuDetailLabel">
		<value condition="!IsEmpty(Container(450).ListItem.Label2)">$INFO[Container(450).ListItem.Label2]</value>
		<value condition="Container.Content(episodes)">$INFO[Container(450).ListItem.Season,$LOCALIZE[20373] ,]</value>
		<value condition="Container.Content(movies)">$INFO[Container(450).ListItem.Year,, | ]$INFO[Container(450).ListItem.Duration,, $LOCALIZE[12391]]$INFO[Container(450).ListItem.Genre, | ,]$INFO[Container(450).ListItem.MPAA, | ,]</value>
		<value condition="!IsEmpty(Container(450).ListItem.Property(Artist_Born))">$INFO[Container(450).ListItem.Property(Artist_Born)]$INFO[Container(450).ListItem.Property(Artist_Died), - ,]</value>
		<value condition="!IsEmpty(Container(450).ListItem.Property(Artist_Formed))">$INFO[Container(450).ListItem.Property(Artist_Formed)]$INFO[Container(450).ListItem.Property(Artist_Disbanded), - ,]</value>
		<value condition="!IsEmpty(Container(450).ListItem.Duration)">$INFO[Container(450).ListItem.Year,, | ]$INFO[Container(450).ListItem.Duration]$INFO[Container(450).ListItem.Genre, | ,]</value>
		<value>$INFO[Container(450).ListItem.Year]</value>
	</variable>
    
	<variable name="MenuThumbnail">
		<value condition="!IsEmpty(ListItem.Art(thumb))">$INFO[Container(450).ListItem.Art(thumb)]</value>
		<value condition="!IsEmpty(ListItem.Icon)">$INFO[Container(450).ListItem.Icon]</value>
		<value>$INFO[Container(450).ListItem.Icon]</value>
	</variable>

    <variable name="BusyAnimationThumbnail">
        <value condition="StringCompare(Skin.String(BusyAnimation.Type),C)">icons/busy-circles.png</value>
        <value condition="StringCompare(Skin.String(BusyAnimation.Type),S)">icons/busy-spiral.png</value>
        <value condition="StringCompare(Skin.String(BusyAnimation.Type),Y)">icons/busy-yinyang.png</value>
        <value>icons/busy-arrows.png</value>
    </variable>

    <variable name="BusyAnimationNameLabel">
        <value condition="StringCompare(Skin.String(BusyAnimation.Type),C)">$LOCALIZE[31952]</value>
        <value condition="StringCompare(Skin.String(BusyAnimation.Type),S)">$LOCALIZE[31953]</value>
        <value condition="StringCompare(Skin.String(BusyAnimation.Type),Y)">$LOCALIZE[31955]</value>
        <value>$LOCALIZE[31951]</value>
    </variable>

    <variable name="BackgroundAnimationLevelLabel">
        <value condition="StringCompare(Skin.String(Background.Animation.Level),1)">$LOCALIZE[21388]</value>
        <value condition="StringCompare(Skin.String(Background.Animation.Level),2)">$LOCALIZE[21375]</value>
        <value condition="StringCompare(Skin.String(Background.Animation.Level),3)">$LOCALIZE[503]</value>
        <value condition="StringCompare(Skin.String(Background.Animation.Level),4)">$LOCALIZE[31929]</value>
        <value>$LOCALIZE[231]</value>
    </variable>

    <variable name="ThumbnailsTypeLabel">
        <value condition="StringCompare(Skin.String(Thumbnails.Type),S)">$LOCALIZE[31954]</value>
        <value>$LOCALIZE[31952]</value>
    </variable>

    <variable name="AdditionalDebugInfoLabel">
        <value condition="StringCompare(Skin.String(Debug.Info.AdditionalType),B)">$LOCALIZE[19190]</value>
        <value condition="StringCompare(Skin.String(Debug.Info.AdditionalType),P)">$LOCALIZE[573]</value>
        <value>$LOCALIZE[16018]</value>
    </variable>

	<variable name="PlayerNameLabel">
		<value condition="Window.IsVisible(slideshow) + !Slideshow.IsVideo">$INFO[Slideshow.Filename]</value>        
		<value condition="Player.HasVideo">$INFO[VideoPlayer.Title]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.TrackNumber,,. ]$INFO[MusicPlayer.Title]</value>
	</variable>
	
	<variable name="PlayerInformationLabel">
		<value condition="Window.IsVisible(slideshow) + !Slideshow.IsVideo">$INFO[Slideshow.EXIFDate,, | ]$INFO[Slideshow.Filesize]</value>
		<value condition="Player.HasVideo + !IsEmpty(VideoPlayer.ChannelNumber)">$INFO[VideoPlayer.ChannelNumber,,. ]$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasVideo">$INFO[VideoPlayer.TVShowTitle,, | ]$INFO[VideoPlayer.Season, $LOCALIZE[20373] , | ]$INFO[VideoPlayer.Episode, $LOCALIZE[20359] , | ]$INFO[VideoPlayer.Artist, | ]$INFO[VideoPlayer.Year]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Artist]$INFO[MusicPlayer.Album, | ]$INFO[MusicPlayer.Year, | ]</value>
	</variable>
	
	<variable name="PlayerThumbnail">
		<value condition="Window.IsVisible(slideshow) + !Slideshow.IsVideo">$INFO[Slideshow.Path]$INFO[Slideshow.Filename]</value>
		<value condition="Player.HasVideo + !IsEmpty(VideoPlayer.Cover)">$INFO[VideoPlayer.Cover]</value>
		<value condition="Player.HasAudio + !IsEmpty(MusicPlayer.Cover)">$INFO[MusicPlayer.Cover]</value>
		<value>$INFO[Player.Art(thumb)]</value>
	</variable>
	
	<variable name="PlayerPlaylistPositionLabel">
        <value condition="Window.IsVisible(slideshow) + !Slideshow.IsVideo">$INFO[Slideshow.SlideIndex]</value>
		<value condition="Player.HasVideo">$INFO[VideoPlayer.PlaylistPosition]$INFO[VideoPlayer.PlaylistLength,/,]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.PlaylistPosition]$INFO[MusicPlayer.PlaylistLength,/,]</value>
	</variable>

	<variable name="PlayerTimeLabel">
		<value condition="Player.HasVideo">$INFO[VideoPlayer.Time]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Time]</value>
	</variable>
	
	<variable name="PlayerDurationLabel">
		<value condition="Player.HasVideo">$INFO[VideoPlayer.Duration]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Duration]</value>
	</variable>
	
	<variable name="PlayerBackgroundMusicLabel">
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Artist,, | ]$INFO[MusicPlayer.Album,, | ]$INFO[MusicPlayer.Title]$INFO[MusicPlayer.Year, | ]</value>
	</variable>
    
    <variable name="PlayerVisualisationLabel">
        <value condition="Visualisation.Locked">$INFO[Visualisation.Name] | $INFO[Visualisation.Preset] | $LOCALIZE[20166]</value>
        <value>$INFO[Visualisation.Name] | $INFO[Visualisation.Preset]</value>
    </variable>

	<variable name="PlayerStarRating">
		<value condition="StringCompare(Player.StarRating,rating5.png)">icons/rating-5.png</value>
		<value condition="StringCompare(Player.StarRating,rating4.png)">icons/rating-4.png</value>
		<value condition="StringCompare(Player.StarRating,rating3.png)">icons/rating-3.png</value>
		<value condition="StringCompare(Player.StarRating,rating2.png)">icons/rating-2.png</value>
		<value condition="StringCompare(Player.StarRating,rating1.png)">icons/rating-1.png</value>
		<value condition="StringCompare(Player.StarRating,rating0.png)">icons/rating-0.png</value>
	</variable>
	
	<variable name="PlayerDirectionIcon">
		<value condition="Player.Paused">icons/player-pause.png</value>
		<value condition="Player.Forwarding">icons/player-fastforward.png</value>
		<value condition="Player.Rewinding">icons/player-rewind.png</value>
	</variable>
	
	<variable name="PlayerSpeedLabel">
		<value condition="Player.Forwarding2x | Player.Rewinding2x">2x</value>
		<value condition="Player.Forwarding4x | Player.Rewinding4x">4x</value>
		<value condition="Player.Forwarding8x | Player.Rewinding4x">8x</value>
		<value condition="Player.Forwarding16x | Player.Rewinding16x">16x</value>
		<value condition="Player.Forwarding32x | Player.Rewinding32x">32x</value>
		<value condition="Player.Paused">0x</value>
		<value>1x</value>
	</variable>

	<variable name="MainColor">
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),y)">MainColor</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),R)">FF7D0000</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),B)">FF00007D</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),G)">FF007D00</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),P)">FF6D0060</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),X) + !IsEmpty(Skin.String(Colors.MainColorCustomValue))">$INFO[Skin.String(Colors.MainColorCustomValue)]</value>
		<value>MainColor</value>
	</variable>

	<variable name="SelectColor">
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),Y)">SelectColor</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),R)">80A00000</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),B)">8000007D</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),G)">80007D00</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),P)">806D0060</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),X) + !IsEmpty(Skin.String(Colors.SelectColorCustomValue))">$INFO[Skin.String(Colors.SelectColorCustomValue)]</value>
		<value>SelectColor</value>
	</variable>

	<variable name="HighlightColor">
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),Y)">HighlightColor</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),R)">FFFF7D00</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),B)">FF00FF7D</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),G)">FF007DFF</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),P)">FFFF00FF</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),X) + !IsEmpty(Skin.String(Colors.HighlightColorCustomValue))">$INFO[Skin.String(Colors.HighlightColorCustomValue)]</value>
		<value>HighlightColor</value>
	</variable>
    
	<variable name="SecondaryColor">
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),Y)">SecondaryColor</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),W)">FF000000</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),G)">FF000000</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),B)">FFA0A0A0</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),X) + !IsEmpty(Skin.String(Colors.SecondaryColorCustomValue))">$INFO[Skin.String(Colors.SecondaryColorCustomValue)]</value>
		<value>SecondaryColor</value>
	</variable>
	
	<variable name="BackgroundColor">
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),Y)">BackgroundColor</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),W)">FFFFFFFF</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),G)">FF505050</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),B)">FF000000</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),X) + !IsEmpty(Skin.String(Colors.BackgroundColorCustomValue))">$INFO[Skin.String(Colors.BackgroundColorCustomValue)]</value>
		<value>BackgroundColor</value>
	</variable>

	<variable name="FademaskColor">
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),Y)">FademaskColor</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),W)">A0FFFFFF</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),G)">A0505050</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),B)">A0000000</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),X) + !IsEmpty(Skin.String(Colors.FademaskColorCustomValue))">$INFO[Skin.String(Colors.FademaskColorCustomValue)]</value>
		<value>FademaskColor</value>
	</variable>

	<variable name="TextColor">
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),Y)">TextColor</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),W)">FF555555</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),G)">FF909090</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),B)">FF606060</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),X) + !IsEmpty(Skin.String(Colors.TextColorCustomValue))">$INFO[Skin.String(Colors.TextColorCustomValue)]</value>
		<value>TextColor</value>
	</variable>
	
	<variable name="ShadowmaskColor">
		<value>55000000</value>
	</variable>

    <variable name="PrimaryColorThemeLabel">
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),Y)">$LOCALIZE[31245]: $INFO[Skin.CurrentTheme]</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),R)">$LOCALIZE[31981]</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),B)">$LOCALIZE[31983]</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),G)">$LOCALIZE[31982]</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),P)">$LOCALIZE[31984]</value>
        <value condition="StringCompare(Skin.String(Colors.PrimaryColorTheme),X)">$LOCALIZE[31244]</value>
        <value>$LOCALIZE[31245]: $INFO[Skin.CurrentTheme]</value>
    </variable>
    
    <variable name="BackgroundColorThemeLabel">
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),Y)">$LOCALIZE[31245]: $INFO[Skin.CurrentTheme]</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),W)">$LOCALIZE[31986]</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),G)">$LOCALIZE[31987]</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),B)">$LOCALIZE[31988]</value>
        <value condition="StringCompare(Skin.String(Colors.BackgroundColorTheme),X)">$LOCALIZE[31244]</value>
        <value>$LOCALIZE[31245]: $INFO[Skin.CurrentTheme]</value>
    </variable>
    
    <variable name="AutoCompletionAddon">
        <value condition="!System.HasHiddenInput + System.HasAddon(plugin.program.autocompletion) + Skin.HasSetting(Keyboard.AutoCompleteActive)">plugin://plugin.program.autocompletion?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).index(1)]&amp;&amp;limit=8</value>
        <value>-</value>
    </variable>
</includes>
